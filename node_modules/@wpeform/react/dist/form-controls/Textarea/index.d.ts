import React from 'react';
import { SettingsAppearanceControlAlignmentEnum, SettingsAppearanceControlTypeEnum } from "../../apollo/generated/types/graphql-global-types";
import { GenericControlProps } from "../utils/types";
export declare const CONTROLCLASS = "wpeform-control-textarea";
export declare type TextareaProps = GenericControlProps & {
    /**
     * Placeholder of an empty textarea. Could be simple string in which case we
     * will use regular placeholder attribute. Or in complex cases, we will
     * provide material like placeholder animation on focus.
     */
    placeholder?: React.ReactNode;
    /**
     * Textarea Prefix, to enhance it with for example Icon etc.
     */
    prefix?: React.ReactNode;
    /**
     * Type of the Textarea. Could be `"BOXY"` or `"MATERIAL"`.
     *
     * @default BOXY
     */
    controlType?: SettingsAppearanceControlTypeEnum;
    /**
     * Alignment of the placeholder.
     *
     * @default LEFT
     */
    controlAlignment?: SettingsAppearanceControlAlignmentEnum;
    /**
     * Value of the text field. This is a controlled component. So we don't
     * support the `defaultValue`.
     */
    value: string;
    /**
     * On change update function. It receives only the value and not the event.
     */
    onChange: (nextValue: string) => void;
    /**
     * On blur event. This is passed directly to the input.
     */
    onBlur?: (event: React.FocusEvent<HTMLTextAreaElement>) => void;
    /**
     * Minimum number of rows the textarea will take up.
     *
     * @default 4
     */
    minRows?: number;
    /**
     * Maximum number of rows the textarea will take up.
     *
     * @default 10
     */
    maxRows?: number;
};
/**
 * A controlled Textarea component. Apart from being a normal textarea it can
 * also accept prefix and will adapt to its height based on content.
 */
export default function Textarea(props: TextareaProps): JSX.Element;
