import { SpinnerProps } from "../Spinner";
import { CONTROLCLASS } from './styled';
export { CONTROLCLASS };
export declare type MarkType = {
    index: number;
    label?: string;
};
export declare type SliderProps = {
    /**
     * Additional classNames.
     */
    className?: string | (string | undefined)[];
    /**
     * Minimum value in the slider.
     */
    min: number;
    /**
     * Maximum value in the slider.
     */
    max: number;
    /**
     * Step value in the slider.
     */
    step: number;
    /**
     * Decimal precision.
     *
     * @default 2
     */
    precision?: number;
    /**
     * Custom marks. Set to true to render marks on each step. Set to array of
     * object with the following type to render custom marks at custom index.
     *
     * ```ts
     * type MarkType = {
     * 	index: number;
     * 	label?: string;
     * }
     * ```
     */
    marks?: MarkType[] | true;
    /**
     * On blur event. Useful to set validation here.
     */
    onBlur?: () => void;
    /**
     * Whether or not slider has error.
     *
     * @default false.
     */
    hasError?: boolean;
    /**
     * Whether or not element is disabled.
     *
     * @default false
     */
    disabled?: boolean;
    /**
     * Whether or not to show free inputs along with the slider.
     *
     * @default true
     */
    showFreeInput?: boolean;
} & Pick<SpinnerProps, 'controlType'> & ({
    /**
     * Type of the Range. `single` for a single value slider. `range` for a range value.
     */
    type: 'single';
    /**
     * Value of the slider.
     */
    value: number;
    /**
     * On change handler.
     */
    onChange: (newVal: number) => void;
} | {
    /**
     * Type of the Range. `single` for a single value slider. `range` for a range value.
     */
    type: 'range';
    /**
     * Value of the slider.
     */
    value: [number, number];
    /**
     * On change handler.
     */
    onChange: (newVal: [number, number]) => void;
});
export default function Slider(props: SliderProps): JSX.Element;
