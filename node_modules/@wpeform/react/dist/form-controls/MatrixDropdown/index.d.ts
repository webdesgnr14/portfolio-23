import { ReactNode } from 'react';
import { TableProps } from "../../components/Table";
import { SelectProps, SelectValueType } from "../Select";
export declare type MatrixDropdownColumn = {
    id: string;
    title: ReactNode;
    width?: string;
};
export declare type MatrixDropdownRow = {
    id: string;
    title: ReactNode;
};
export declare type MatrixDropdownValue<T extends SelectValueType> = {
    [rowId: string]: {
        [columnId: string]: T[];
    };
};
export declare const CONTROLCLASS = "wpeform-control-matrix-dropdown";
export declare type MatrixDropdownProps<T extends SelectValueType> = {
    /**
     * Additional classNames.
     */
    className?: string | (string | undefined)[];
    /**
     * Rows for matrix.
     *
     * ```ts
     * type MatrixInputRow = {
     * 	id: string;
     * 	title: ReactNode;
     * }
     * ```
     */
    rows: MatrixDropdownRow[];
    /**
     * Columns for matrix.
     *
     * ```ts
     * type MatrixInputColumn = {
     * 	id: string;
     * 	title: ReactNode;
     * 	width?: string;
     * }
     * ```
     */
    columns: MatrixDropdownColumn[];
    /**
     * Dictionary value of matrix.
     *
     * Should be accessible by `value[rowId][columnId]`.
     */
    value: MatrixDropdownValue<T>;
    /**
     * On Change function.
     */
    onChange: (rowId: string, columnId: string, newValue: T[]) => void;
    /**
     * Width of row heading.
     *
     * @default 180px
     */
    rowHeadingWidth?: string;
    /**
     * Style of matrix table.
     *
     * @default stripped
     */
    tableType?: TableProps['type'];
    /**
     * Prefix for HTML name. Complete name is calculated by
     * `${namePrefix}[${rowId}][${colId}]`
     */
    namePrefix?: string;
} & Pick<SelectProps<T>, 'canClear' | 'controlAlignment' | 'controlType' | 'disabled' | 'hasError' | 'items' | 'mode' | 'onBlur' | 'placeholder' | 'searchPlaceholder' | 'prefix' | 'showSearch' | 'emptyResultPlaceholder' | 'size'> & Partial<Pick<TableProps, 'fixedLayout' | 'highlightOnHover'>>;
export default function MatrixDropdown<T extends SelectValueType>(props: MatrixDropdownProps<T>): JSX.Element;
