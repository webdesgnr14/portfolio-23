import React, { ReactNode } from 'react';
import { TableProps } from "../../components/Table";
import { RadioProps } from "../Radio";
export declare const CONTROLCLASS = "wpeform-control-matrix-choice";
export declare type MatrixChoiceColumn = {
    id: string;
    title: ReactNode;
    width?: string | null;
};
export declare type MatrixChoiceRow = {
    id: string;
    title: ReactNode;
};
export declare type MatrixChoiceRowValue = {
    rowId: string;
    columns: string[];
};
export declare type MatrixChoiceValue = MatrixChoiceRowValue[];
export declare type MatrixChoiceProps = {
    /**
     * Additional classNames.
     */
    className?: string | (string | undefined)[];
    /**
     * Rows for matrix.
     *
     * ```ts
     * type MatrixInputRow = {
     * 	id: string;
     * 	title: ReactNode;
     * }
     * ```
     */
    rows: MatrixChoiceRow[];
    /**
     * Columns for matrix.
     *
     * ```ts
     * type MatrixInputColumn = {
     * 	id: string;
     * 	title: ReactNode;
     * 	width?: string;
     * }
     * ```
     */
    columns: MatrixChoiceColumn[];
    /**
     * Dictionary value of matrix.
     *
     * Should be accessible by `value[rowId][columnId]`.
     */
    value: MatrixChoiceValue;
    /**
     * On Change function.
     */
    onChange: (rowId: string, columns: string[]) => void;
    /**
     * Whether or not multiple items from a row should be selectable.
     *
     * @default false
     */
    multiple?: boolean;
    /**
     * Width of row heading.
     *
     * @default 180px
     */
    rowHeadingWidth?: string;
    /**
     * On blur event. This is passed directly to the input.
     */
    onBlur?: (event: React.FocusEvent<HTMLInputElement>) => void;
    /**
     * Style of matrix table.
     *
     * @default stripped
     */
    tableType?: TableProps['type'];
    /**
     * Prefix for HTML name. Complete name is calculated by
     * `${namePrefix}[${rowId}][${colId}]`
     */
    namePrefix?: string;
    /**
     * Icon for Radio/Checkbox.
     *
     * @default 'fas fa-check'
     */
    icon?: string;
} & Pick<RadioProps, 'icon' | 'disabled'> & Partial<Pick<TableProps, 'fixedLayout' | 'highlightOnHover'>>;
export default function MatrixChoice(props: MatrixChoiceProps): JSX.Element;
