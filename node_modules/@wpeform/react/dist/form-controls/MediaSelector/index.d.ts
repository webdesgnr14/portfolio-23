import { ReactNode } from 'react';
import { GenericControlProps } from "../utils/types";
import { CONTROLCLASS } from './styled';
export { CONTROLCLASS };
export declare type MediaItemType = {
    /**
     * Id of the media.
     */
    id: string;
    /**
     * Source URL. The type is evaluated from this URL.
     */
    src: string;
    /**
     * Alt text.
     */
    alt?: string;
    /**
     * Label of the media item.
     */
    label: ReactNode;
    /**
     * Aspect ratio.
     *
     * @default 16/9
     */
    aspectRatio?: number;
};
export declare type MediaSelectorProps = {
    /**
     * Current value.
     */
    value: string[];
    /**
     * Items to render. Each item of the array must be of the following type.
     *
     * ```ts
     * type MediaItemType = {
     * 	id: string;
     * 	src: string;
     * 	label: ReactNode;
     * }
     * ```
     */
    items: MediaItemType[];
    /**
     * Type of the media selector.
     * Could be single or multiple.
     */
    type: 'single' | 'multiple';
    /**
     * On change handler.
     */
    onChange: (newValue: string[]) => void;
    /**
     * Height of the media items, in pixel. Width is calculated from the
     * aspect ratio.
     *
     * @default 200
     */
    height?: number;
    /**
     * Icon for checkbox/radio.
     */
    icon?: string;
    /**
     * On blur handler.
     */
    onBlur?: () => void;
    /**
     * Additional classNames.
     */
    className?: string | (string | undefined)[];
} & Pick<GenericControlProps, 'id' | 'disabled' | 'name'>;
export default function MediaSelector(props: MediaSelectorProps): JSX.Element;
