import React from 'react';
import { ApolloError } from '@apollo/client';
import { ExceptionProps } from "../../../../components/Exception";
import { ThemeStyle } from '../FallbackContainer';
export declare const ButtonContainer: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
export declare type GenericApolloErrorProps = {
    children: React.ReactNode;
    themeStyle?: ThemeStyle | null;
    error?: ApolloError;
    retry?: () => void;
    /**
     * Label on retry button.
     *
     * @default "RETRY WITHOUT RELOAD"
     */
    retryLabel?: string;
    title: React.ReactNode;
    /**
     * Whether or not to hide the reload page button.
     * @default false
     */
    hideReload?: boolean;
    widthOverride?: string;
    /**
     * Whether or not we are doing a SSR.
     *
     * @default false
     */
    ssr?: boolean;
    /**
     * Type of error.
     *
     * @default 500
     */
    type?: ExceptionProps['type'];
};
export default function GenericApolloError(props: GenericApolloErrorProps): JSX.Element;
