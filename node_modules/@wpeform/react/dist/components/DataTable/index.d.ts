import { ReactNode } from 'react';
import { SettingsAppearanceControlTypeEnum } from "../../apollo/generated/types/graphql-global-types";
import { UseDataTableReturnTouple } from './utils';
import { OrderProps } from './components/SearchSort';
import { ListItemsProps } from './components/ListItems';
export declare type DataTableProps<ITEM, FILTERS extends Record<string, any>> = {
    /**
     * DataTable State. Use of the table state initializer to get this.
     */
    state: UseDataTableReturnTouple<FILTERS>[0];
    /**
     * DataTable State Dispatcher function. Use of the table state initializer to get this.
     */
    dispatch: UseDataTableReturnTouple<FILTERS>[1];
    /**
     * Number of items.
     */
    totalItems?: number;
    /**
     * Callback to generate preview.
     */
    generatePreview: (itemId: string) => ReactNode;
    /**
     * Node to render when no item is selected to preview.
     */
    emptyPreview: ReactNode;
    /**
     * List of order bys.
     *
     * ```ts
     * type OrderBys {
     * 		label: string;
     * 		value: string;
     * }
     * ```
     */
    orderBys: OrderProps<FILTERS>['orderBys'];
    /**
     * Initial filters. Used to reset filters to nothing.
     */
    initialFilters: FILTERS;
    /**
     * Additional offset for the sticky preview.
     *
     * @default 0
     */
    stickyOffset?: number;
    /**
     * Where to render rounded borders.
     *
     * @default bottom
     */
    roundedBorder?: 'top' | 'bottom' | 'both' | 'none';
    /**
     * Additional classnames.
     */
    className?: string;
    /**
     * Search placeholder.
     *
     * @default "search items"
     */
    searchPlaceholder?: string;
    /**
     * Type of controls rendered into datatable.
     *
     * @default BOXY
     */
    controlType?: SettingsAppearanceControlTypeEnum;
} & Omit<ListItemsProps<ITEM, FILTERS>, 'state' | 'dispatch' | 'totalItems'>;
declare function DataTable<ITEM, FILTERS extends Record<string, any>>(props: DataTableProps<ITEM, FILTERS>): JSX.Element;
declare namespace DataTable {
    var PreviewHeader: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
    var PreviewTitle: import("styled-components").StyledComponent<"h3", import("styled-components").DefaultTheme, {}, never>;
    var PreviewMeta: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
    var PreviewData: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
    var PreviewActions: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
    var Preview: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
    var PreviewDataUserInput: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
    var PreviewDataHeading: import("styled-components").StyledComponent<"h5", import("styled-components").DefaultTheme, {}, never>;
}
export default DataTable;
export * from './utils';
