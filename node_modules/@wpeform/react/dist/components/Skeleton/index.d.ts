export declare const CONTROLCLASS = "wpeform-component-skeleton";
export declare type SkeletonProps = {
    width: number | string;
    height: number | string;
    shape: 'rectangle' | 'circle' | 'sharp';
    className?: string;
    /**
     * Background and foreground color.
     *
     * @default normal
     */
    color?: 'normal' | 'darker';
    marginBottom?: 'para' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'small' | 'large' | number;
    /**
     * Whether or not the skeleton to be displayed inlined with other elements.
     *
     * @default false
     */
    inline?: boolean;
};
declare function Skeleton(props: SkeletonProps): JSX.Element;
declare namespace Skeleton {
    var Paragraph: (props: Pick<SkeletonProps, "className" | "inline" | "width"> & {
        marginBottom?: number | undefined;
    }) => JSX.Element;
    var Heading: (props: Pick<SkeletonProps, "className" | "width"> & {
        level: 1 | 2 | 3 | 4 | 5 | 6;
        marginBottom?: number | undefined;
    }) => JSX.Element;
    var Avatar: (props: Pick<SkeletonProps, "className" | "color" | "height">) => JSX.Element;
    var Checkbox: (props: Pick<SkeletonProps, "className">) => JSX.Element;
    var Radio: (props: Pick<SkeletonProps, "className">) => JSX.Element;
    var Text: (props: Pick<SkeletonProps, "className">) => JSX.Element;
    var Textarea: (props: Pick<SkeletonProps, "className">) => JSX.Element;
    var MCQOption: (props: Pick<SkeletonProps, "className"> & {
        type: "checkbox" | "radio";
        width: string | number;
    }) => JSX.Element;
    var Label: (props: {
        titleWidth: string | number;
        subtitleWidth: string | number;
        className?: string | undefined;
    }) => JSX.Element;
}
export default Skeleton;
