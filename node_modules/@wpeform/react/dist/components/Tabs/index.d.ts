import React from 'react';
import { SettingsAppearanceProgressBarPositionEnum } from "../../apollo/generated/types/graphql-global-types";
import { CONTROLCLASS } from './styled';
export { CONTROLCLASS };
declare type Tab = {
    id: string;
    title: React.ReactNode;
    subtitle?: React.ReactNode;
    icon?: string;
};
export declare type TabsProps = {
    /**
     * Id of the current Tab. It must be within the tabs array.
     */
    currentTab: string;
    /**
     * Handler for when changing the tab. It should set the `currentTab` from
     * the parent.
     */
    onTabChange: (nextTab: string) => void;
    /**
     * List of tab items. Each should have unique `id`, a `title` and optionally
     * `subtitle` and `icon`.
     */
    tabs: Tab[];
    /**
     * Whether or not to show progress bar.
     * @default true
     */
    showProgressBar?: boolean;
    /**
     * Whether or not to show the progress label.
     *
     * @default true
     */
    showProgressLabel?: boolean;
    /**
     * Progress bar position.
     * @default SettingsAppearanceProgressBarPositionEnum.TOP
     */
    progressBarPosition?: SettingsAppearanceProgressBarPositionEnum;
    /**
     * Progress bar percentage precision.
     *
     * @default 2
     */
    progressBarPrecision?: number;
    /**
     * Force the progress bar position at any time. Changing this will animate
     * from last progress.
     */
    forceProgress?: number;
    /**
     * Children to render in the TabPanel. Since the parent has control over
     * the current tab, parent itself can conditionally render different children.
     */
    children: React.ReactNode;
    /**
     * Additional classes.
     */
    className?: string;
    /**
     * Scroll to the tab container top when changing the tab.
     *
     * @default true
     */
    scrollOnTabChange?: boolean;
    /**
     * Vertical offset for scrolling to tab container top.
     *
     * @default -100
     */
    tabScrollOffset?: number;
    /**
     * Optional tab footer. This is never removed from the panel and is outside
     * the animation zone.
     */
    footer?: React.ReactNode;
    /**
     * Whether or not to show the tabs.
     *
     * @default true
     */
    showTabs?: boolean;
    /**
     * Show a stopwatch above the footer of the tab.
     */
    stopwatchStartTime?: number;
};
/**
 * A Tab like component made with use-case of EForm in mind. It has the following
 * features.
 *
 * - ðŸ”¥ Animates on tab change.
 * - ðŸ”¥ Responsiveness in the tab list items.
 * - ðŸ”¥ Can scroll window to focus tab on change.
 */
export default function Tabs(props: TabsProps): JSX.Element;
