import { ReactNode } from 'react';
import type { planType } from "../../app/admin/utils/freemius";
export declare type UpgradeNoticeProps = {
    /**
     * Whether or not user can upgrade.
     *
     * @default true
     */
    canUpgrade?: boolean;
    /**
     * If user cannot upgrade, then show this notice.
     *
     * @default "Kindly ask your administrator to upgrade."
     */
    cannotUpgradeNotice?: string;
    /**
     * Plan not released notice.
     *
     * @default "The plan is not released yet. Please stay tuned."
     */
    planNotReleasedNotice?: string;
    /**
     * Checkout URL to upgrade to currently selected plan.
     */
    checkoutUrl: string;
    /**
     * Trial URL.
     */
    trialUrl?: string;
    /**
     * Whether or not to show trial.
     *
     * @default true
     */
    showTrial?: boolean;
    /**
     * Freemius plans data.
     */
    plans: Readonly<planType[]>;
    /**
     * Needed plan for the feature in question.
     */
    neededPlan: string;
    /**
     * Title of the notice.
     *
     * @default "14 Days free trial"
     */
    title?: ReactNode;
    /**
     * Subtitle of the notice.
     *
     * @default "This feature is a part of the {neededPlan} plan."
     */
    subtitle?: string;
    /**
     * Whether or not show the compact widget.
     *
     * @default false
     */
    compact?: boolean;
    /**
     * Pricing URL shown in the compact mode.
     */
    pricingUrl?: string;
};
declare function UpgradeNotice(props: UpgradeNoticeProps): JSX.Element;
declare namespace UpgradeNotice {
    var OverWrapper: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
    var OverlayContainer: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {
        hasBottomBigGutter?: boolean | undefined;
    }, never>;
}
export default UpgradeNotice;
