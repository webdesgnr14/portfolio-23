import { ReactNode } from 'react';
import { ObjectWithId } from "../../utils/ops";
import { CONTROLCLASS } from './styled';
export { CONTROLCLASS };
export declare type RepeatableProps<T extends ObjectWithId> = {
    /**
     * Current items in the repeatable component.
     */
    items: T[];
    /**
     * Callback to render items.
     */
    renderItem: (item: T) => ReactNode;
    /**
     * On delete handler. If not provided, then delete button is not shown.
     */
    onDelete?: (item: T) => void;
    /**
     * On add new handler. If not provided, then add new button is not shown.
     */
    onNew?: (position: number) => string;
    /**
     * Add New button label.
     *
     * @default 'ADD NEW'
     */
    addButtonLabel?: string;
    /**
     * Label for add button on each element.
     *
     * @default 'Add new item after this'.
     */
    addButtonAfterLabel?: string;
    /**
     * On sort handler. If not provided, then sort is not enabled.
     */
    onSort?: (newOrder: T[]) => void;
    /**
     * If provided, a custom heading will be shown.
     */
    headingLabel?: (index: number, item: T) => ReactNode;
    /**
     * Sort button label.
     *
     * @default 'Click and drag to rearrange item'
     */
    sortButtonLabel?: string;
    /**
     * Delete button label.
     *
     * @default 'Delete this item'
     */
    deleteButtonLabel?: string;
    /**
     * Delete confirmation message.
     *
     * @default 'Are you sure you want to delete this item?'
     */
    deleteConfirmationMessage?: string;
    /**
     * Additional classNames.
     */
    className?: string | (string | undefined)[];
};
export default function Repeatable<T extends ObjectWithId>(props: RepeatableProps<T>): JSX.Element;
