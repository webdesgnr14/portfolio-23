import React, { ReactNode } from 'react';
declare function AuthErrorIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element;
declare function ServerErrorIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element;
declare function Error404Icon(props: React.SVGProps<SVGSVGElement>): JSX.Element;
declare function ClientErrorIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element;
export declare const CONTROLCLASS = "wpeform-component-exception";
export declare const defaultConfig: {
    403: {
        icon: typeof AuthErrorIcon;
        iconTitle: string;
        title: string;
        desc: string;
    };
    404: {
        icon: typeof Error404Icon;
        iconTitle: string;
        title: string;
        desc: string;
    };
    500: {
        icon: typeof ServerErrorIcon;
        iconTitle: string;
        title: string;
        desc: string;
    };
    client: {
        icon: typeof ClientErrorIcon;
        iconTitle: string;
        title: string;
        desc: string;
    };
};
export declare type ExceptionProps = {
    /**
     * Type of exception. Each one is assigned their own icon and label.
     */
    type: '404' | '500' | '403' | 'client';
    /**
     * Error title.
     */
    title?: ReactNode;
    /**
     * Error description.
     */
    description?: ReactNode;
    /**
     * Error icon. By default is populated from the type of error.
     */
    icon?: React.ComponentType<any>;
    /**
     * Footer. A good place for recovery buttons.
     */
    footer?: ReactNode;
};
export default function Exception(props: ExceptionProps): React.ReactElement;
export {};
