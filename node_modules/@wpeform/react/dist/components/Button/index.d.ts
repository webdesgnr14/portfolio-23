import React from 'react';
import { GenericSizeEnum } from "../../apollo/generated/types/graphql-global-types";
import { CONTROLCLASS, ButtonsGroup } from './styled';
export { CONTROLCLASS, ButtonsGroup };
export declare type ButtonProps = {
    /**
     * Whether to render this button as link.
     *
     * @default false
     */
    asLink?: boolean;
    /**
     * Href of the link.
     */
    href?: string;
    /**
     * Link target,
     *
     * @default self
     */
    linkTarget?: '_self' | '_blank';
    /**
     * HTML title attribute.
     */
    title?: string;
    /**
     * Size of the button.
     *
     * @default GenericSizeEnum.DEFAULT
     */
    size?: GenericSizeEnum | 'TINY';
    /**
     * Style of the button. Must be one from the register.
     */
    style: string;
    /**
     * Whether or not the button has capsule like appearance.
     *
     * @default false
     */
    rounded?: boolean;
    /**
     * Whether or not the button is colorful.
     *
     * @default true
     */
    colorful?: boolean;
    /**
     * Whether or not the button is disabled.
     */
    disabled?: boolean;
    /**
     * Button children.
     */
    children?: React.ReactNode;
    /**
     * Icon for the button.
     */
    icon?: string;
    /**
     * Icon Position. Whether before or after.
     *
     * @default before
     */
    iconPosition?: 'before' | 'after';
    /**
     * Button onClick handler. There is no need to call `event.preventDefault()`
     * because it is always called.
     */
    onClick?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;
    /**
     * Additional classNames.
     */
    className?: string;
    /**
     * Whether or not the button is in loading state.
     */
    loading?: boolean;
    /**
     * Set to true, if loading is done. Works only when loading is set to true.
     * This effectively ends the loading animation and shows a check button.
     *
     * @default false
     */
    loadingDone?: boolean;
    /**
     * Resulting loaded State. It is considered only when loading is true and
     * loadingDone is true. Depending on this, different icons are shown.
     *
     * @default success
     */
    loadedState?: 'success' | 'error';
};
/**
 * A Button Component specific for WP-EForm. This by default doesn't have much
 * styles. The style comes from `buttonStyles` collection from core.
 */
export default function Button(props: ButtonProps): JSX.Element;
