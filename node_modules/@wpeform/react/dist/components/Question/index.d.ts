import React from 'react';
import { SettingsAppearanceControlLayoutEnum, SettingsAppearanceControlAlignmentEnum } from "../../apollo/generated/types/graphql-global-types";
import { CONTROLCLASS } from './styled';
export { CONTROLCLASS };
export declare type QuestionProps = {
    /**
     * Id of the control. Is applied to the `label`s (title and subtitle).
     */
    id: string;
    /**
     * Layout of the Question.
     *
     * @default SettingsAppearanceControlLayoutEnum.VERTICAL
     */
    layout?: SettingsAppearanceControlLayoutEnum;
    /**
     * Alignment of the Questions.
     *
     * @default SettingsAppearanceControlAlignmentEnum.LEFT
     */
    alignment?: SettingsAppearanceControlAlignmentEnum;
    /**
     * Title or primary label.
     */
    title?: React.ReactNode;
    /**
     * Subtitle or secondary label.
     */
    subtitle?: React.ReactNode;
    /**
     * Question description.
     */
    description?: React.ReactNode;
    /**
     * Hint message. If this is not undefined, then a hint button would popup
     * right outside of the form control (children).
     */
    hintMessage?: React.ReactNode;
    /**
     * Icon for the hint button.
     *
     * @default "fas fa-question"
     */
    hintIcon?: string;
    /**
     * Label or tooltip of the hint button.
     */
    hintLabel?: string;
    /**
     * Children. This is where you'd put the main form control.
     */
    children: React.ReactNode;
    /**
     * Additional classNames applied to the questions container.
     */
    className?: string;
    /**
     * Error messages to show below the form control.
     */
    errors?: string[];
    /**
     * Whether or not to show asterisk before the title.
     * @default false
     */
    asterisk?: boolean;
};
/**
 * A general purpose Question component to show individual form control elements.
 * It has all the configuration props take into account the common appearance
 * config of EForm elements.
 */
declare function Question(props: QuestionProps): JSX.Element;
declare namespace Question {
    var Asterisk: () => JSX.Element;
}
export default Question;
