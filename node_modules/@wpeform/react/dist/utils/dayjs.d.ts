import dayjs, { Dayjs } from 'dayjs';
export default dayjs;
export { Dayjs };
/**
 * DayJS format for parsing mySQL datetime field
 */
export declare const mysqlFormat = "YYYY-MM-DD HH:mm:ss";
/**
 * Empty value of a datatime column for comparing.
 */
export declare const mysqlEmptyDate = "0000-00-00 00:00:00";
export declare const dayjsTimeFormat = "hh:mm A";
export declare const dayjsLocalDateTimeFormat = "LLL";
export declare const dayjsLocalDateFormat = "LL";
export declare const dayjsLocalTimeFormat = "LT";
export declare const chartDateFormat = "MMM M, YY";
export declare function getMinDate(dateOne: string, dateTwo: string, format: string): string;
export declare function getMaxDate(dateOne: string, dateTwo: string, format: string): string;
export declare function getDefaultDateTimeFormatString(pickerType: 'datetime' | 'date' | 'time'): string;
/**
 * Parse possible mysql datetime string.
 *
 * @param input Input string.
 * @returns String if parsed properly. False otherwise.
 */
export declare function parsePossibleMySQLDateTimeString(input: string): string | undefined;
export declare function parsePossibleDateTimeFormula(input?: string, currentTime?: number): string | undefined;
/**
 * Compare two datetime string. Both must be in mySQL compatible datetime
 * format. Returns 1 if $compare_with is greater than $compare_to, 0 if both
 * are equal, and -1 if $compare_with is less than $compare_to. If at-least one
 * of them in invalid format, then returns NULL.
 *
 * @param compareWith With value.
 * @param compareTo To value.
 * @return null|int
 */
export declare function compareDates(compareWith: string, compareTo: string): 1 | -1 | 0 | null;
export declare function getDayjsFromMySQLInput(value: string): dayjs.Dayjs;
