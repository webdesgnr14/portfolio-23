import { SettingsAppearanceControlTypeEnum, SettingsAppearanceControlAlignmentEnum, SettingsAppearanceControlLayoutEnum, WidthPresetsEnum, ButtonOpenTypeEnum, ButtonIconPositionEnum, GenericAlignmentEnum, GenericSizeEnum, OptionColumnEnum, EventComparisonEnum, EventOperationEnum, ScoreOperationEnum, PrefilEnum, ValidationFilterTypeEnum, SelectTypeEnum, HeadingSizeEnum, HeadingTagEnum, MaskTypeEnum, NumberComparisonEnum, EventHasEnum, EventRelationEnum, ConsequenceActionEnum, SubmitTimerEnum, ScoreFromToTypeEnum, SettingsAppearanceContainerLayoutEnum, SettingsAppearanceProgressBarPositionEnum, FormPaginationRestrictionEnum, FormSettingsBackgroundOriginAndClipEnum, FormSettingsBackgroundAttachmentEnum, FormSettingsBackgroundRepeatEnum, DarkThemeModeEnum, RedirectTypeEnum } from "./../../../../../apollo/generated/types/graphql-global-types";
export interface FFormForSubmission_limitations {
    __typename: "FormLimitationMessageType";
    id: string;
    message: string;
    dynamicAnchors: string | null;
    mentions: string | null;
}
export interface FFormForSubmission_notices {
    __typename: "FormLimitationMessageType";
    id: string;
    message: string;
    dynamicAnchors: string | null;
    mentions: string | null;
}
export interface FFormForSubmission_elements_appearance_widths {
    __typename: "FormElementAppearanceWidthType";
    id: string;
    containerMinWidth: number;
    elementWidth: string;
}
export interface FFormForSubmission_elements_appearance {
    __typename: "FormElementAppearanceType";
    title: string | null;
    subtitle: string | null;
    description: string | null;
    overrideControlAppearance: boolean;
    controlType: SettingsAppearanceControlTypeEnum;
    controlAlignment: SettingsAppearanceControlAlignmentEnum;
    controlLayout: SettingsAppearanceControlLayoutEnum;
    hint: string | null;
    hintIcon: string | null;
    hintLabel: string | null;
    answerDescription: string | null;
    columnSize: WidthPresetsEnum;
    basicWidth: string;
    widths: FFormForSubmission_elements_appearance_widths[];
    initiallyHidden: boolean;
    className: string;
}
export interface FFormForSubmission_elements_config_buttons_attributes {
    __typename: "FormElementButtonsConfigAttributesType";
    open: ButtonOpenTypeEnum;
    popupHeight: number;
    popupWidth: number;
}
export interface FFormForSubmission_elements_config_buttons_buttons {
    __typename: "FormElementConfigButtonType";
    id: string;
    icon: string;
    iconPosition: ButtonIconPositionEnum;
    label: string;
    link: string;
}
export interface FFormForSubmission_elements_config_buttons_interface {
    __typename: "FormElementButtonsConfigInterfaceType";
    alignment: GenericAlignmentEnum;
    colored: boolean;
    size: GenericSizeEnum;
    style: string;
    rounded: boolean;
}
export interface FFormForSubmission_elements_config_buttons {
    __typename: "FormElementButtonsConfigType";
    attributes: FFormForSubmission_elements_config_buttons_attributes | null;
    buttons: FFormForSubmission_elements_config_buttons_buttons[];
    interface: FFormForSubmission_elements_config_buttons_interface | null;
}
export interface FFormForSubmission_elements_config_checkbox_interface_options {
    __typename: "FormElementConfigMcqOptionType";
    answerDescription: string | null;
    id: string;
    label: string;
    num: number | null;
}
export interface FFormForSubmission_elements_config_checkbox_interface {
    __typename: "FormElementCheckboxConfigInterfaceType";
    icon: string;
    columns: OptionColumnEnum;
    options: FFormForSubmission_elements_config_checkbox_interface_options[];
    others: boolean;
    othersId: string;
    othersPlaceholder: string;
    shuffle: boolean;
}
export interface FFormForSubmission_elements_config_checkbox_score_scoreConditions {
    __typename: "ElementScoreConditionType";
    compareWith: string;
    condition: EventComparisonEnum;
    id: string;
    operation: EventOperationEnum;
    scoreId: string;
    scoreOperation: ScoreOperationEnum;
    scoreValue: number;
}
export interface FFormForSubmission_elements_config_checkbox_score {
    __typename: "FormElementConfigScoreType";
    scoreConditions: FFormForSubmission_elements_config_checkbox_score_scoreConditions[];
}
export interface FFormForSubmission_elements_config_checkbox_attributes {
    __typename: "FormElementConfigAttributesType";
    defaultValue: string;
    prefilParameter: string;
    prefilType: PrefilEnum;
    readonly: boolean;
}
export interface FFormForSubmission_elements_config_checkbox_validation_filters {
    __typename: "FormElementConfigFiltersType";
    type: ValidationFilterTypeEnum | null;
    /**
     * Minimum number of choices.
     */
    minItems: number | null;
    /**
     * Maximum number of choices.
     */
    maxItems: number | null;
    /**
     * Minimum length for string type input.
     */
    minString: number | null;
    /**
     * Maximum length for string type input.
     */
    maxString: number | null;
    /**
     * Minimum value for number type input.
     */
    minNum: number | null;
    /**
     * Maximum value for number type input.
     */
    maxNum: number | null;
}
export interface FFormForSubmission_elements_config_checkbox_validation {
    __typename: "FormElementCheckboxConfigValidationType";
    required: boolean;
    filters: FFormForSubmission_elements_config_checkbox_validation_filters;
}
export interface FFormForSubmission_elements_config_checkbox {
    __typename: "FormElementCheckboxConfigType";
    interface: FFormForSubmission_elements_config_checkbox_interface | null;
    score: FFormForSubmission_elements_config_checkbox_score;
    attributes: FFormForSubmission_elements_config_checkbox_attributes;
    validation: FFormForSubmission_elements_config_checkbox_validation | null;
}
export interface FFormForSubmission_elements_config_dropdown_interface_options {
    __typename: "FormElementConfigMcqOptionType";
    answerDescription: string | null;
    id: string;
    label: string;
    num: number | null;
}
export interface FFormForSubmission_elements_config_dropdown_interface {
    __typename: "FormElementDropdownConfigInterfaceType";
    icon: string;
    placeholder: string;
    showSearch: boolean;
    searchPlaceholder: string;
    emptySearchResultNotice: string;
    options: FFormForSubmission_elements_config_dropdown_interface_options[];
    othersId: string;
    others: boolean;
    othersPlaceholder: string;
    shuffle: boolean;
}
export interface FFormForSubmission_elements_config_dropdown_attributes {
    __typename: "FormElementConfigAttributesType";
    defaultValue: string;
    prefilParameter: string;
    prefilType: PrefilEnum;
    readonly: boolean;
}
export interface FFormForSubmission_elements_config_dropdown_score_scoreConditions {
    __typename: "ElementScoreConditionType";
    compareWith: string;
    condition: EventComparisonEnum;
    id: string;
    operation: EventOperationEnum;
    scoreId: string;
    scoreOperation: ScoreOperationEnum;
    scoreValue: number;
}
export interface FFormForSubmission_elements_config_dropdown_score {
    __typename: "FormElementConfigScoreType";
    scoreConditions: FFormForSubmission_elements_config_dropdown_score_scoreConditions[];
}
export interface FFormForSubmission_elements_config_dropdown_validation_filters {
    __typename: "FormElementConfigFiltersType";
    type: ValidationFilterTypeEnum | null;
    /**
     * Minimum number of choices.
     */
    minItems: number | null;
    /**
     * Maximum number of choices.
     */
    maxItems: number | null;
    /**
     * Minimum length for string type input.
     */
    minString: number | null;
    /**
     * Maximum length for string type input.
     */
    maxString: number | null;
    /**
     * Minimum value for number type input.
     */
    minNum: number | null;
    /**
     * Maximum value for number type input.
     */
    maxNum: number | null;
}
export interface FFormForSubmission_elements_config_dropdown_validation {
    __typename: "FormElementDropdownConfigValidationType";
    filters: FFormForSubmission_elements_config_dropdown_validation_filters;
    required: boolean;
    selectType: SelectTypeEnum;
}
export interface FFormForSubmission_elements_config_dropdown {
    __typename: "FormElementDropdownConfigType";
    interface: FFormForSubmission_elements_config_dropdown_interface | null;
    attributes: FFormForSubmission_elements_config_dropdown_attributes;
    score: FFormForSubmission_elements_config_dropdown_score;
    validation: FFormForSubmission_elements_config_dropdown_validation | null;
}
export interface FFormForSubmission_elements_config_heading_interface {
    __typename: "FormElementHeadingConfigInterfaceType";
    divider: boolean;
    icon: string;
    showTop: boolean;
    size: HeadingSizeEnum;
    tag: HeadingTagEnum;
}
export interface FFormForSubmission_elements_config_heading {
    __typename: "FormElementHeadingConfigType";
    interface: FFormForSubmission_elements_config_heading_interface | null;
}
export interface FFormForSubmission_elements_config_radio_interface_options {
    __typename: "FormElementConfigMcqOptionType";
    answerDescription: string | null;
    id: string;
    label: string;
    num: number | null;
}
export interface FFormForSubmission_elements_config_radio_interface {
    __typename: "FormElementRadioConfigInterfaceType";
    columns: OptionColumnEnum;
    icon: string;
    othersId: string;
    options: FFormForSubmission_elements_config_radio_interface_options[];
    others: boolean;
    othersPlaceholder: string;
    shuffle: boolean;
}
export interface FFormForSubmission_elements_config_radio_attributes {
    __typename: "FormElementConfigAttributesType";
    defaultValue: string;
    prefilParameter: string;
    prefilType: PrefilEnum;
    readonly: boolean;
}
export interface FFormForSubmission_elements_config_radio_score_scoreConditions {
    __typename: "ElementScoreConditionType";
    compareWith: string;
    condition: EventComparisonEnum;
    id: string;
    operation: EventOperationEnum;
    scoreId: string;
    scoreOperation: ScoreOperationEnum;
    scoreValue: number;
}
export interface FFormForSubmission_elements_config_radio_score {
    __typename: "FormElementConfigScoreType";
    scoreConditions: FFormForSubmission_elements_config_radio_score_scoreConditions[];
}
export interface FFormForSubmission_elements_config_radio_validation {
    __typename: "FormElementRadioConfigValidationType";
    required: boolean;
}
export interface FFormForSubmission_elements_config_radio {
    __typename: "FormElementRadioConfigType";
    interface: FFormForSubmission_elements_config_radio_interface | null;
    attributes: FFormForSubmission_elements_config_radio_attributes;
    score: FFormForSubmission_elements_config_radio_score;
    validation: FFormForSubmission_elements_config_radio_validation | null;
}
export interface FFormForSubmission_elements_config_text_interface {
    __typename: "FormElementTextConfigInterfaceType";
    icon: string;
    placeholder: string;
}
export interface FFormForSubmission_elements_config_text_attributes {
    __typename: "FormElementConfigAttributesType";
    defaultValue: string;
    prefilParameter: string;
    prefilType: PrefilEnum;
    readonly: boolean;
}
export interface FFormForSubmission_elements_config_text_score_scoreConditions {
    __typename: "ElementScoreConditionType";
    compareWith: string;
    condition: EventComparisonEnum;
    id: string;
    operation: EventOperationEnum;
    scoreId: string;
    scoreOperation: ScoreOperationEnum;
    scoreValue: number;
}
export interface FFormForSubmission_elements_config_text_score {
    __typename: "FormElementConfigScoreType";
    scoreConditions: FFormForSubmission_elements_config_text_score_scoreConditions[];
}
export interface FFormForSubmission_elements_config_text_validation_filters {
    __typename: "FormElementConfigFiltersType";
    type: ValidationFilterTypeEnum | null;
    /**
     * Minimum number of choices.
     */
    minItems: number | null;
    /**
     * Maximum number of choices.
     */
    maxItems: number | null;
    /**
     * Minimum length for string type input.
     */
    minString: number | null;
    /**
     * Maximum length for string type input.
     */
    maxString: number | null;
    /**
     * Minimum value for number type input.
     */
    minNum: number | null;
    /**
     * Maximum value for number type input.
     */
    maxNum: number | null;
}
export interface FFormForSubmission_elements_config_text_validation_masks_maskRegExps {
    __typename: "FormElementConfigMaskRegExpType";
    caseSensitive: boolean;
    id: string;
    pattern: string;
}
export interface FFormForSubmission_elements_config_text_validation_masks {
    __typename: "FormElementConfigMasksType";
    alwaysShowMask: boolean;
    /**
     * Predefined mask.
     */
    maskPreset: string | null;
    /**
     * List of regular expressions in sequence.
     */
    maskRegExps: FFormForSubmission_elements_config_text_validation_masks_maskRegExps[];
    /**
     * Mask from user input.
     */
    maskString: string | null;
    maskType: MaskTypeEnum | null;
    placeholder: string;
}
export interface FFormForSubmission_elements_config_text_validation {
    __typename: "FormElementTextConfigValidationType";
    filters: FFormForSubmission_elements_config_text_validation_filters;
    masks: FFormForSubmission_elements_config_text_validation_masks;
    required: boolean;
}
export interface FFormForSubmission_elements_config_text {
    __typename: "FormElementTextConfigType";
    interface: FFormForSubmission_elements_config_text_interface | null;
    attributes: FFormForSubmission_elements_config_text_attributes;
    score: FFormForSubmission_elements_config_text_score;
    validation: FFormForSubmission_elements_config_text_validation | null;
}
export interface FFormForSubmission_elements_config_textarea_interface {
    __typename: "FormElementTextareaConfigInterfaceType";
    icon: string;
    placeholder: string;
}
export interface FFormForSubmission_elements_config_textarea_attributes {
    __typename: "FormElementConfigAttributesType";
    defaultValue: string;
    prefilParameter: string;
    prefilType: PrefilEnum;
    readonly: boolean;
}
export interface FFormForSubmission_elements_config_textarea_score_scoreConditions {
    __typename: "ElementScoreConditionType";
    compareWith: string;
    condition: EventComparisonEnum;
    id: string;
    operation: EventOperationEnum;
    scoreId: string;
    scoreOperation: ScoreOperationEnum;
    scoreValue: number;
}
export interface FFormForSubmission_elements_config_textarea_score {
    __typename: "FormElementConfigScoreType";
    scoreConditions: FFormForSubmission_elements_config_textarea_score_scoreConditions[];
}
export interface FFormForSubmission_elements_config_textarea_validation_filters {
    __typename: "FormElementConfigFiltersType";
    type: ValidationFilterTypeEnum | null;
    /**
     * Minimum number of choices.
     */
    minItems: number | null;
    /**
     * Maximum number of choices.
     */
    maxItems: number | null;
    /**
     * Minimum length for string type input.
     */
    minString: number | null;
    /**
     * Maximum length for string type input.
     */
    maxString: number | null;
    /**
     * Minimum value for number type input.
     */
    minNum: number | null;
    /**
     * Maximum value for number type input.
     */
    maxNum: number | null;
}
export interface FFormForSubmission_elements_config_textarea_validation {
    __typename: "FormElementTextareaConfigValidationType";
    required: boolean;
    filters: FFormForSubmission_elements_config_textarea_validation_filters;
}
export interface FFormForSubmission_elements_config_textarea {
    __typename: "FormElementTextareaConfigType";
    interface: FFormForSubmission_elements_config_textarea_interface | null;
    attributes: FFormForSubmission_elements_config_textarea_attributes;
    score: FFormForSubmission_elements_config_textarea_score;
    validation: FFormForSubmission_elements_config_textarea_validation | null;
}
export interface FFormForSubmission_elements_config_toggle_interface {
    __typename: "FormElementToggleConfigInterfaceType";
    activeIcon: string;
    activeLabel: string;
    inactiveIcon: string;
    inactiveLabel: string;
}
export interface FFormForSubmission_elements_config_toggle_score_scoreConditions {
    __typename: "ElementScoreConditionType";
    compareWith: string;
    condition: EventComparisonEnum;
    id: string;
    operation: EventOperationEnum;
    scoreId: string;
    scoreOperation: ScoreOperationEnum;
    scoreValue: number;
}
export interface FFormForSubmission_elements_config_toggle_score {
    __typename: "FormElementConfigScoreType";
    scoreConditions: FFormForSubmission_elements_config_toggle_score_scoreConditions[];
}
export interface FFormForSubmission_elements_config_toggle_attributes {
    __typename: "FormElementConfigAttributesType";
    defaultValue: string;
    prefilParameter: string;
    prefilType: PrefilEnum;
    readonly: boolean;
}
export interface FFormForSubmission_elements_config_toggle_validation {
    __typename: "FormElementToggleConfigValidationType";
    required: boolean;
}
export interface FFormForSubmission_elements_config_toggle {
    __typename: "FormElementToggleConfigType";
    interface: FFormForSubmission_elements_config_toggle_interface | null;
    score: FFormForSubmission_elements_config_toggle_score;
    attributes: FFormForSubmission_elements_config_toggle_attributes;
    validation: FFormForSubmission_elements_config_toggle_validation | null;
}
export interface FFormForSubmission_elements_config_slider_score_scoreConditions {
    __typename: "ElementScoreConditionType";
    compareWith: string;
    condition: EventComparisonEnum;
    id: string;
    operation: EventOperationEnum;
    scoreId: string;
    scoreOperation: ScoreOperationEnum;
    scoreValue: number;
}
export interface FFormForSubmission_elements_config_slider_score {
    __typename: "FormElementConfigScoreType";
    scoreConditions: FFormForSubmission_elements_config_slider_score_scoreConditions[];
}
export interface FFormForSubmission_elements_config_slider_attributes {
    __typename: "FormElementConfigAttributesType";
    defaultValue: string;
    prefilParameter: string;
    prefilType: PrefilEnum;
    readonly: boolean;
}
export interface FFormForSubmission_elements_config_slider_interface_customMarks {
    __typename: "FormElementConfigSliderMarkType";
    index: number;
    label: string | null;
    markId: string;
}
export interface FFormForSubmission_elements_config_slider_interface {
    __typename: "FormElementSliderConfigInterfaceType";
    customMarks: FFormForSubmission_elements_config_slider_interface_customMarks[];
    max: number;
    min: number;
    precision: number;
    showFreeInput: boolean;
    showMarks: boolean;
    step: number;
}
export interface FFormForSubmission_elements_config_slider {
    __typename: "FormElementSliderConfigType";
    score: FFormForSubmission_elements_config_slider_score;
    attributes: FFormForSubmission_elements_config_slider_attributes;
    interface: FFormForSubmission_elements_config_slider_interface | null;
}
export interface FFormForSubmission_elements_config_range_score_scoreConditions {
    __typename: "ElementScoreConditionType";
    compareWith: string;
    condition: EventComparisonEnum;
    id: string;
    operation: EventOperationEnum;
    scoreId: string;
    scoreOperation: ScoreOperationEnum;
    scoreValue: number;
}
export interface FFormForSubmission_elements_config_range_score {
    __typename: "FormElementConfigScoreType";
    scoreConditions: FFormForSubmission_elements_config_range_score_scoreConditions[];
}
export interface FFormForSubmission_elements_config_range_attributes {
    __typename: "FormElementConfigAttributesType";
    defaultValue: string;
    prefilParameter: string;
    prefilType: PrefilEnum;
    readonly: boolean;
}
export interface FFormForSubmission_elements_config_range_interface_customMarks {
    __typename: "FormElementConfigSliderMarkType";
    index: number;
    label: string | null;
    markId: string;
}
export interface FFormForSubmission_elements_config_range_interface {
    __typename: "FormElementRangeConfigInterfaceType";
    customMarks: FFormForSubmission_elements_config_range_interface_customMarks[];
    max: number;
    min: number;
    precision: number;
    separator: string;
    showFreeInput: boolean;
    showMarks: boolean;
    step: number;
}
export interface FFormForSubmission_elements_config_range {
    __typename: "FormElementRangeConfigType";
    score: FFormForSubmission_elements_config_range_score;
    attributes: FFormForSubmission_elements_config_range_attributes;
    interface: FFormForSubmission_elements_config_range_interface | null;
}
export interface FFormForSubmission_elements_config_mathcalc_interface {
    __typename: "FormElementMathcalcConfigInterfaceType";
    decimalSeparator: string;
    formula: string;
    precision: number;
    prefix: string;
    suffix: string;
    type: string;
    thousandsSeparator: string;
}
export interface FFormForSubmission_elements_config_mathcalc {
    __typename: "FormElementMathcalcConfigType";
    interface: FFormForSubmission_elements_config_mathcalc_interface | null;
}
export interface FFormForSubmission_elements_config_rating_interface_customItems {
    __typename: "FormElementRatingItemType";
    icon: string;
    itemId: string;
}
export interface FFormForSubmission_elements_config_rating_interface {
    __typename: "FormElementRatingConfigInterfaceType";
    compareWith: number;
    customItems: FFormForSubmission_elements_config_rating_interface_customItems[];
    customRatingIcon: string;
    feedbackLabel: string;
    feedbackWhen: NumberComparisonEnum;
    ratingMax: number;
    showFeedback: boolean;
    type: string;
}
export interface FFormForSubmission_elements_config_rating_validation {
    __typename: "FormElementRatingConfigValidationType";
    required: boolean;
}
export interface FFormForSubmission_elements_config_rating_score_scoreConditions {
    __typename: "ElementScoreConditionType";
    compareWith: string;
    condition: EventComparisonEnum;
    id: string;
    operation: EventOperationEnum;
    scoreId: string;
    scoreOperation: ScoreOperationEnum;
    scoreValue: number;
}
export interface FFormForSubmission_elements_config_rating_score {
    __typename: "FormElementConfigScoreType";
    scoreConditions: FFormForSubmission_elements_config_rating_score_scoreConditions[];
}
export interface FFormForSubmission_elements_config_rating_attributes {
    __typename: "FormElementConfigAttributesType";
    defaultValue: string;
    prefilParameter: string;
    prefilType: PrefilEnum;
    readonly: boolean;
}
export interface FFormForSubmission_elements_config_rating {
    __typename: "FormElementRatingConfigType";
    interface: FFormForSubmission_elements_config_rating_interface | null;
    validation: FFormForSubmission_elements_config_rating_validation | null;
    score: FFormForSubmission_elements_config_rating_score;
    attributes: FFormForSubmission_elements_config_rating_attributes;
}
export interface FFormForSubmission_elements_config_matrixchoice_validation {
    __typename: "FormElementMatrixchoiceConfigValidationType";
    required: boolean;
}
export interface FFormForSubmission_elements_config_matrixchoice_attributes {
    __typename: "FormElementConfigAttributesType";
    defaultValue: string;
    prefilParameter: string;
    prefilType: PrefilEnum;
    readonly: boolean;
}
export interface FFormForSubmission_elements_config_matrixchoice_score_scoreConditions {
    __typename: "ElementScoreConditionType";
    compareWith: string;
    condition: EventComparisonEnum;
    id: string;
    operation: EventOperationEnum;
    scoreId: string;
    scoreOperation: ScoreOperationEnum;
    scoreValue: number;
}
export interface FFormForSubmission_elements_config_matrixchoice_score {
    __typename: "FormElementConfigScoreType";
    scoreConditions: FFormForSubmission_elements_config_matrixchoice_score_scoreConditions[];
}
export interface FFormForSubmission_elements_config_matrixchoice_interface_columns {
    __typename: "FormElementMatrixRowColumnType";
    itemId: string;
    label: string;
    num: number | null;
    width: string | null;
}
export interface FFormForSubmission_elements_config_matrixchoice_interface_rows {
    __typename: "FormElementMatrixRowColumnType";
    itemId: string;
    label: string;
    num: number | null;
    width: string | null;
}
export interface FFormForSubmission_elements_config_matrixchoice_interface {
    __typename: "FormElementMatrixchoiceConfigInterfaceType";
    columns: FFormForSubmission_elements_config_matrixchoice_interface_columns[];
    rows: FFormForSubmission_elements_config_matrixchoice_interface_rows[];
    icon: string;
    multiple: boolean;
    rowHeadingWidth: string;
    tableType: string;
}
export interface FFormForSubmission_elements_config_matrixchoice {
    __typename: "FormElementMatrixchoiceConfigType";
    validation: FFormForSubmission_elements_config_matrixchoice_validation | null;
    attributes: FFormForSubmission_elements_config_matrixchoice_attributes;
    score: FFormForSubmission_elements_config_matrixchoice_score;
    interface: FFormForSubmission_elements_config_matrixchoice_interface | null;
}
export interface FFormForSubmission_elements_config_sortable_attributes {
    __typename: "FormElementConfigAttributesType";
    defaultValue: string;
    prefilParameter: string;
    prefilType: PrefilEnum;
    readonly: boolean;
}
export interface FFormForSubmission_elements_config_sortable_score_scoreConditions {
    __typename: "ElementScoreConditionType";
    compareWith: string;
    condition: EventComparisonEnum;
    id: string;
    operation: EventOperationEnum;
    scoreId: string;
    scoreOperation: ScoreOperationEnum;
    scoreValue: number;
}
export interface FFormForSubmission_elements_config_sortable_score {
    __typename: "FormElementConfigScoreType";
    scoreConditions: FFormForSubmission_elements_config_sortable_score_scoreConditions[];
}
export interface FFormForSubmission_elements_config_sortable_interface_items {
    __typename: "FormElementSortableItemType";
    itemId: string;
    label: string;
}
export interface FFormForSubmission_elements_config_sortable_interface {
    __typename: "FormElementSortableConfigInterfaceType";
    items: FFormForSubmission_elements_config_sortable_interface_items[];
    lockVertically: boolean;
    shuffle: boolean;
}
export interface FFormForSubmission_elements_config_sortable {
    __typename: "FormElementSortableConfigType";
    attributes: FFormForSubmission_elements_config_sortable_attributes;
    score: FFormForSubmission_elements_config_sortable_score;
    interface: FFormForSubmission_elements_config_sortable_interface | null;
}
export interface FFormForSubmission_elements_config_datetimeinput_validation {
    __typename: "FormElementDatetimeinputConfigValidationType";
    required: boolean;
    maxValue: string;
    minValue: string;
}
export interface FFormForSubmission_elements_config_datetimeinput_attributes {
    __typename: "FormElementConfigAttributesType";
    defaultValue: string;
    prefilParameter: string;
    prefilType: PrefilEnum;
    readonly: boolean;
}
export interface FFormForSubmission_elements_config_datetimeinput_score_scoreConditions {
    __typename: "ElementScoreConditionType";
    compareWith: string;
    condition: EventComparisonEnum;
    id: string;
    operation: EventOperationEnum;
    scoreId: string;
    scoreOperation: ScoreOperationEnum;
    scoreValue: number;
}
export interface FFormForSubmission_elements_config_datetimeinput_score {
    __typename: "FormElementConfigScoreType";
    scoreConditions: FFormForSubmission_elements_config_datetimeinput_score_scoreConditions[];
}
export interface FFormForSubmission_elements_config_datetimeinput_interface {
    __typename: "FormElementDatetimeinputConfigInterfaceType";
    dateTimeSeparator: string;
    format: string;
    icon: string;
    showInputLabels: boolean;
    timeType: string;
    type: string;
    hideSeconds: boolean;
}
export interface FFormForSubmission_elements_config_datetimeinput {
    __typename: "FormElementDatetimeinputConfigType";
    validation: FFormForSubmission_elements_config_datetimeinput_validation | null;
    attributes: FFormForSubmission_elements_config_datetimeinput_attributes;
    score: FFormForSubmission_elements_config_datetimeinput_score;
    interface: FFormForSubmission_elements_config_datetimeinput_interface | null;
}
export interface FFormForSubmission_elements_config_matrixinput_validation {
    __typename: "FormElementMatrixinputConfigValidationType";
    required: boolean;
}
export interface FFormForSubmission_elements_config_matrixinput_attributes {
    __typename: "FormElementConfigAttributesType";
    defaultValue: string;
    prefilParameter: string;
    prefilType: PrefilEnum;
    readonly: boolean;
}
export interface FFormForSubmission_elements_config_matrixinput_score_scoreConditions {
    __typename: "ElementScoreConditionType";
    compareWith: string;
    condition: EventComparisonEnum;
    id: string;
    operation: EventOperationEnum;
    scoreId: string;
    scoreOperation: ScoreOperationEnum;
    scoreValue: number;
}
export interface FFormForSubmission_elements_config_matrixinput_score {
    __typename: "FormElementConfigScoreType";
    scoreConditions: FFormForSubmission_elements_config_matrixinput_score_scoreConditions[];
}
export interface FFormForSubmission_elements_config_matrixinput_interface_columns {
    __typename: "FormElementMatrixRowColumnType";
    itemId: string;
    label: string;
    num: number | null;
    width: string | null;
}
export interface FFormForSubmission_elements_config_matrixinput_interface_rows {
    __typename: "FormElementMatrixRowColumnType";
    itemId: string;
    label: string;
    num: number | null;
    width: string | null;
}
export interface FFormForSubmission_elements_config_matrixinput_interface {
    __typename: "FormElementMatrixinputConfigInterfaceType";
    columns: FFormForSubmission_elements_config_matrixinput_interface_columns[];
    rows: FFormForSubmission_elements_config_matrixinput_interface_rows[];
    icon: string;
    multiline: boolean;
    rowHeadingWidth: string;
    tableType: string;
}
export interface FFormForSubmission_elements_config_matrixinput {
    __typename: "FormElementMatrixinputConfigType";
    validation: FFormForSubmission_elements_config_matrixinput_validation | null;
    attributes: FFormForSubmission_elements_config_matrixinput_attributes;
    score: FFormForSubmission_elements_config_matrixinput_score;
    interface: FFormForSubmission_elements_config_matrixinput_interface | null;
}
export interface FFormForSubmission_elements_config_singlecheckbox_interface {
    __typename: "FormElementSinglecheckboxConfigInterfaceType";
    icon: string;
}
export interface FFormForSubmission_elements_config_singlecheckbox_score_scoreConditions {
    __typename: "ElementScoreConditionType";
    compareWith: string;
    condition: EventComparisonEnum;
    id: string;
    operation: EventOperationEnum;
    scoreId: string;
    scoreOperation: ScoreOperationEnum;
    scoreValue: number;
}
export interface FFormForSubmission_elements_config_singlecheckbox_score {
    __typename: "FormElementConfigScoreType";
    scoreConditions: FFormForSubmission_elements_config_singlecheckbox_score_scoreConditions[];
}
export interface FFormForSubmission_elements_config_singlecheckbox_attributes {
    __typename: "FormElementConfigAttributesType";
    defaultValue: string;
    prefilParameter: string;
    prefilType: PrefilEnum;
    readonly: boolean;
}
export interface FFormForSubmission_elements_config_singlecheckbox_validation {
    __typename: "FormElementSinglecheckboxConfigValidationType";
    required: boolean;
}
export interface FFormForSubmission_elements_config_singlecheckbox {
    __typename: "FormElementSinglecheckboxConfigType";
    interface: FFormForSubmission_elements_config_singlecheckbox_interface | null;
    score: FFormForSubmission_elements_config_singlecheckbox_score;
    attributes: FFormForSubmission_elements_config_singlecheckbox_attributes;
    validation: FFormForSubmission_elements_config_singlecheckbox_validation | null;
}
export interface FFormForSubmission_elements_config_address_validation {
    __typename: "FormElementAddressConfigValidationType";
    required: boolean;
}
export interface FFormForSubmission_elements_config_address_attributes {
    __typename: "FormElementConfigAttributesType";
    defaultValue: string;
    prefilParameter: string;
    prefilType: PrefilEnum;
    readonly: boolean;
}
export interface FFormForSubmission_elements_config_address_interface {
    __typename: "FormElementAddressConfigInterfaceType";
    cityPlaceholder: string;
    countryPlaceholder: string;
    disableIcons: boolean;
    fieldOne: boolean;
    fieldOnePlaceholder: string;
    fieldTwo: boolean;
    fieldTwoPlaceholder: string;
    restrictCountries: string[];
    showCity: boolean;
    showCountry: boolean;
    showState: boolean;
    showZip: boolean;
    statePlaceholder: string;
    zipPlaceholder: string;
}
export interface FFormForSubmission_elements_config_address {
    __typename: "FormElementAddressConfigType";
    validation: FFormForSubmission_elements_config_address_validation | null;
    attributes: FFormForSubmission_elements_config_address_attributes;
    interface: FFormForSubmission_elements_config_address_interface | null;
}
export interface FFormForSubmission_elements_config {
    __typename: "FormElementConfigType";
    buttons: FFormForSubmission_elements_config_buttons | null;
    checkbox: FFormForSubmission_elements_config_checkbox | null;
    dropdown: FFormForSubmission_elements_config_dropdown | null;
    heading: FFormForSubmission_elements_config_heading | null;
    radio: FFormForSubmission_elements_config_radio | null;
    text: FFormForSubmission_elements_config_text | null;
    textarea: FFormForSubmission_elements_config_textarea | null;
    toggle: FFormForSubmission_elements_config_toggle | null;
    slider: FFormForSubmission_elements_config_slider | null;
    range: FFormForSubmission_elements_config_range | null;
    mathcalc: FFormForSubmission_elements_config_mathcalc | null;
    rating: FFormForSubmission_elements_config_rating | null;
    matrixchoice: FFormForSubmission_elements_config_matrixchoice | null;
    sortable: FFormForSubmission_elements_config_sortable | null;
    datetimeinput: FFormForSubmission_elements_config_datetimeinput | null;
    matrixinput: FFormForSubmission_elements_config_matrixinput | null;
    singlecheckbox: FFormForSubmission_elements_config_singlecheckbox | null;
    address: FFormForSubmission_elements_config_address | null;
}
export interface FFormForSubmission_elements {
    __typename: "FormElementType";
    appearance: FFormForSubmission_elements_appearance;
    children: string[];
    id: string;
    type: string;
    config: FFormForSubmission_elements_config | null;
    extras: string | null;
}
export interface FFormForSubmission_conditionals_events {
    __typename: "ConditionalEventType";
    id: string;
    /**
     * Element Id for the event
     */
    fieldid: string;
    /**
     * Compare against for the event.
     */
    has: EventHasEnum;
    /**
     * Is or is not operation.
     */
    operation: EventOperationEnum;
    /**
     * Comparison operator for the event.
     */
    operator: EventComparisonEnum;
    /**
     * Comparison against value.
     */
    value: string | null;
    /**
     * Logical relation with next event.
     */
    relation: EventRelationEnum;
}
export interface FFormForSubmission_conditionals_consequences {
    __typename: "ConditionalConsequenceType";
    id: string;
    /**
     * Possible action for the consequence.
     */
    action: ConsequenceActionEnum;
    /**
     * Fields to show if action is SHOW_FIELDS.
     */
    fieldsToShow: string[] | null;
    /**
     * Fields to hide if action is HIDE_FIELDS.
     */
    fieldsToHide: string[] | null;
    /**
     * Field to set value of if action is SET_VALUE_OF
     */
    fieldToSet: string | null;
    /**
     * Value to set if action is SET_VALUE_OF.
     */
    value: string | null;
    /**
     * Pages to show if action is SHOW_PAGES.
     */
    pagesToShow: string[] | null;
    /**
     * Pages to hide if action is HIDE_PAGES.
     */
    pagesToHide: string[] | null;
}
export interface FFormForSubmission_conditionals {
    __typename: "ConditionalType";
    id: string;
    events: FFormForSubmission_conditionals_events[];
    consequences: FFormForSubmission_conditionals_consequences[];
}
export interface FFormForSubmission_pools {
    __typename: "FormPoolType";
    id: string;
    name: string;
    children: string[];
}
export interface FFormForSubmission_settings_timer {
    __typename: "FormSettingsTimerType";
    recordSubmissionTime: boolean;
    showStopwatch: boolean;
    submitTimer: SubmitTimerEnum;
    showTimer: boolean;
    timeLimit: number | null;
    timerMessage: string;
}
export interface FFormForSubmission_settings_score_scoreLists {
    __typename: "FormScoreItemType";
    id: string;
    name: string;
    color: string;
    outcomeName: string;
    outcomeDescription: string;
}
export interface FFormForSubmission_settings_score_designations {
    __typename: "FormScoreDesignationType";
    /**
     * description of designation
     */
    description: string;
    /**
     * min score
     */
    from: number;
    /**
     * type of from and to, value or percentage
     */
    fromToType: ScoreFromToTypeEnum;
    id: string;
    /**
     * name of designation
     */
    name: string;
    /**
     * which category of score the designation works on
     */
    scoreCategory: string;
    /**
     * max score
     */
    to: number;
}
export interface FFormForSubmission_settings_score {
    __typename: "FormSettingsScoreType";
    precision: number;
    scoreLists: FFormForSubmission_settings_score_scoreLists[];
    designations: (FFormForSubmission_settings_score_designations | null)[];
}
export interface FFormForSubmission_settings {
    __typename: "FormSettingsType";
    timer: FFormForSubmission_settings_timer | null;
    score: FFormForSubmission_settings_score | null;
}
export interface FFormForSubmission_structures_config {
    __typename: "FormStructureConfigType";
    title: string;
    subtitle: string | null;
    icon: string | null;
    timer: number | null;
    initiallyHidden: boolean;
}
export interface FFormForSubmission_structures {
    __typename: "FormStructureType";
    id: string;
    config: FFormForSubmission_structures_config;
    children: string[];
}
export interface FFormForSubmission_styles_appearance {
    __typename: "FormStylesAppearanceType";
    containerLayout: SettingsAppearanceContainerLayoutEnum;
    maxWidth: string;
    controlType: SettingsAppearanceControlTypeEnum;
    controlAlignment: SettingsAppearanceControlAlignmentEnum;
    controlLayout: SettingsAppearanceControlLayoutEnum;
}
export interface FFormForSubmission_styles_pagination {
    __typename: "FormStylesPaginationType";
    showTabs: boolean;
    showProgressBar: boolean;
    progressDecimalPoint: number;
    progressBarPosition: SettingsAppearanceProgressBarPositionEnum;
    showProgressLabel: boolean;
    autoProgress: boolean;
    autoProgressDelay: number;
    autoScroll: boolean;
    scrollOffset: number;
    autoSubmit: boolean;
    blockPreviousNavigation: boolean;
    paginationRestriction: FormPaginationRestrictionEnum;
    panelEnabled: boolean;
    alignment: GenericAlignmentEnum;
    size: GenericSizeEnum;
    style: string;
    rounded: boolean;
    colored: boolean;
    barlike: boolean;
    nextLabel: string;
    nextIcon: string;
    nextIconPosition: ButtonIconPositionEnum;
    prevLabel: string;
    prevIcon: string;
    prevIconPosition: ButtonIconPositionEnum;
    submitLabel: string;
    submitIcon: string;
    submitIconPosition: ButtonIconPositionEnum;
    updateLabel: string;
    updateIcon: string;
    updateIconPosition: ButtonIconPositionEnum;
    showResetButton: boolean;
    resetLabel: string;
    resetMessage: string;
    resetIcon: string;
    resetIconPosition: ButtonIconPositionEnum;
    hideWhenNotRelevant: boolean;
}
export interface FFormForSubmission_styles_customBackground {
    __typename: "FormStylesCustomBackgroundType";
    backgroundImage: string;
    backgroundClip: FormSettingsBackgroundOriginAndClipEnum;
    backgroundAttachment: FormSettingsBackgroundAttachmentEnum;
    backgroundOrigin: FormSettingsBackgroundOriginAndClipEnum;
    backgroundPosition: string;
    backgroundRepeat: FormSettingsBackgroundRepeatEnum;
    backgroundSize: string;
    enabled: boolean;
}
export interface FFormForSubmission_styles_theme {
    __typename: "FormStylesThemeType";
    css: string;
    customColorBg: string | null;
    customColorPrimary: string | null;
    customColorSecondary: string | null;
    customColorText: string | null;
    scheme: string;
    darkMode: DarkThemeModeEnum;
}
export interface FFormForSubmission_styles_typography {
    __typename: "FormStylesTypographyType";
    baseFont: number;
    bodyFamily: string;
    bodyFamilyCustom: string;
    headFamily: string;
    headFamilyCustom: string;
    headFontBold: boolean;
    headFontItalic: boolean;
}
export interface FFormForSubmission_styles_formBehavior {
    __typename: "FormStylesFormBehaviorType";
    disabledAutoComplete: boolean;
    subject: string;
    message: string;
    updateSubject: string;
    updateMessage: string;
    kioskMode: boolean;
    kioskMessage: string;
    kioskTime: number;
    errorSubject: string;
    errorRetryButtonLabel: string;
    errorRetryButtonIcon: string;
    errorRetryButtonIconPosition: ButtonIconPositionEnum;
}
export interface FFormForSubmission_styles_redirection_scoreTotalLogic {
    __typename: "FormScoreTotalRedirectionItemType";
    id: string;
    scoreId: string | null;
    url: string;
    from: number;
    to: number;
}
export interface FFormForSubmission_styles_redirection_scorePercentageLogic {
    __typename: "FormScorePercentageRedirectionItemType";
    id: string;
    scoreId: string | null;
    url: string;
    from: number;
    to: number;
}
export interface FFormForSubmission_styles_redirection_conditionalLogic_events {
    __typename: "ConditionalEventType";
    /**
     * Element Id for the event
     */
    fieldid: string;
    /**
     * Compare against for the event.
     */
    has: EventHasEnum;
    id: string;
    /**
     * Is or is not operation.
     */
    operation: EventOperationEnum;
    /**
     * Comparison operator for the event.
     */
    operator: EventComparisonEnum;
    /**
     * Logical relation with next event.
     */
    relation: EventRelationEnum;
    /**
     * Comparison against value.
     */
    value: string | null;
}
export interface FFormForSubmission_styles_redirection_conditionalLogic {
    __typename: "FormScoreConditionalRedirectionItemType";
    id: string;
    url: string;
    events: FFormForSubmission_styles_redirection_conditionalLogic_events[];
}
export interface FFormForSubmission_styles_redirection {
    __typename: "FormStylesRedirectionType";
    type: RedirectTypeEnum;
    url: string;
    delay: number;
    message: string;
    iframeRedirect: boolean;
    scoreTotalLogic: FFormForSubmission_styles_redirection_scoreTotalLogic[];
    scorePercentageLogic: FFormForSubmission_styles_redirection_scorePercentageLogic[];
    conditionalLogic: FFormForSubmission_styles_redirection_conditionalLogic[];
}
export interface FFormForSubmission_styles_tracking {
    __typename: "FormStylesTrackingType";
    urlTracking: boolean;
    urlTrackId: string;
}
export interface FFormForSubmission_styles {
    __typename: "FormStylesType";
    appearance: FFormForSubmission_styles_appearance | null;
    pagination: FFormForSubmission_styles_pagination | null;
    customBackground: FFormForSubmission_styles_customBackground | null;
    theme: FFormForSubmission_styles_theme | null;
    typography: FFormForSubmission_styles_typography | null;
    formBehavior: FFormForSubmission_styles_formBehavior | null;
    redirection: FFormForSubmission_styles_redirection | null;
    tracking: FFormForSubmission_styles_tracking | null;
}
export interface FFormForSubmission {
    __typename: "FormType";
    limitations: FFormForSubmission_limitations[];
    notices: FFormForSubmission_notices[];
    elements: FFormForSubmission_elements[];
    conditionals: FFormForSubmission_conditionals[];
    id: string;
    name: string;
    pools: FFormForSubmission_pools[];
    settings: FFormForSubmission_settings | null;
    structures: FFormForSubmission_structures[];
    styles: FFormForSubmission_styles | null;
}
