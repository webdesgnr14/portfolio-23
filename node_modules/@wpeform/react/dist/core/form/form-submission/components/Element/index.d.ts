import React, { ReactNode, RefObject } from 'react';
import { ElementFrontFormUiProps } from "../../../../collections/elements/types";
export declare type ElementProps = {
    elmId: string;
    /**
     * Whether or not to give gutter.
     *
     * @default true
     */
    hasGutter?: boolean;
    /**
     * Override how title is rendered. If this is set, then Question will not
     * have it's title.
     */
    overrideRender?: (title: ReactNode, question: ReactNode, required: boolean, containerProps: {
        ref: RefObject<HTMLElement | null>;
        tabIndex: 0 | undefined;
    }) => JSX.Element;
    /**
     * The presentation of the element. This is passed to the Element UI and
     * its responsibility is to render properly.
     *
     * @default regular
     */
    presentation?: ElementFrontFormUiProps['presentation'];
};
declare function Element(props: ElementProps): JSX.Element | null;
declare const MemoizedElement: React.MemoExoticComponent<typeof Element>;
export default MemoizedElement;
