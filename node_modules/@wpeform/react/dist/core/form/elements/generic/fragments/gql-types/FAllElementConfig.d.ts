import { ButtonOpenTypeEnum, ButtonIconPositionEnum, GenericAlignmentEnum, GenericSizeEnum, OptionColumnEnum, EventComparisonEnum, EventOperationEnum, ScoreOperationEnum, PrefilEnum, ValidationFilterTypeEnum, SelectTypeEnum, HeadingSizeEnum, HeadingTagEnum, MaskTypeEnum, NumberComparisonEnum } from "./../../../../../../apollo/generated/types/graphql-global-types";
export interface FAllElementConfig_buttons_attributes {
    __typename: "FormElementButtonsConfigAttributesType";
    open: ButtonOpenTypeEnum;
    popupHeight: number;
    popupWidth: number;
}
export interface FAllElementConfig_buttons_buttons {
    __typename: "FormElementConfigButtonType";
    id: string;
    icon: string;
    iconPosition: ButtonIconPositionEnum;
    label: string;
    link: string;
}
export interface FAllElementConfig_buttons_interface {
    __typename: "FormElementButtonsConfigInterfaceType";
    alignment: GenericAlignmentEnum;
    colored: boolean;
    size: GenericSizeEnum;
    style: string;
    rounded: boolean;
}
export interface FAllElementConfig_buttons {
    __typename: "FormElementButtonsConfigType";
    attributes: FAllElementConfig_buttons_attributes | null;
    buttons: FAllElementConfig_buttons_buttons[];
    interface: FAllElementConfig_buttons_interface | null;
}
export interface FAllElementConfig_checkbox_interface_options {
    __typename: "FormElementConfigMcqOptionType";
    answerDescription: string | null;
    id: string;
    label: string;
    num: number | null;
}
export interface FAllElementConfig_checkbox_interface {
    __typename: "FormElementCheckboxConfigInterfaceType";
    icon: string;
    columns: OptionColumnEnum;
    options: FAllElementConfig_checkbox_interface_options[];
    others: boolean;
    othersId: string;
    othersPlaceholder: string;
    shuffle: boolean;
}
export interface FAllElementConfig_checkbox_score_scoreConditions {
    __typename: "ElementScoreConditionType";
    compareWith: string;
    condition: EventComparisonEnum;
    id: string;
    operation: EventOperationEnum;
    scoreId: string;
    scoreOperation: ScoreOperationEnum;
    scoreValue: number;
}
export interface FAllElementConfig_checkbox_score {
    __typename: "FormElementConfigScoreType";
    scoreConditions: FAllElementConfig_checkbox_score_scoreConditions[];
}
export interface FAllElementConfig_checkbox_attributes {
    __typename: "FormElementConfigAttributesType";
    defaultValue: string;
    prefilParameter: string;
    prefilType: PrefilEnum;
    readonly: boolean;
}
export interface FAllElementConfig_checkbox_validation_filters {
    __typename: "FormElementConfigFiltersType";
    type: ValidationFilterTypeEnum | null;
    /**
     * Minimum number of choices.
     */
    minItems: number | null;
    /**
     * Maximum number of choices.
     */
    maxItems: number | null;
    /**
     * Minimum length for string type input.
     */
    minString: number | null;
    /**
     * Maximum length for string type input.
     */
    maxString: number | null;
    /**
     * Minimum value for number type input.
     */
    minNum: number | null;
    /**
     * Maximum value for number type input.
     */
    maxNum: number | null;
}
export interface FAllElementConfig_checkbox_validation {
    __typename: "FormElementCheckboxConfigValidationType";
    required: boolean;
    filters: FAllElementConfig_checkbox_validation_filters;
}
export interface FAllElementConfig_checkbox {
    __typename: "FormElementCheckboxConfigType";
    interface: FAllElementConfig_checkbox_interface | null;
    score: FAllElementConfig_checkbox_score;
    attributes: FAllElementConfig_checkbox_attributes;
    validation: FAllElementConfig_checkbox_validation | null;
}
export interface FAllElementConfig_dropdown_interface_options {
    __typename: "FormElementConfigMcqOptionType";
    answerDescription: string | null;
    id: string;
    label: string;
    num: number | null;
}
export interface FAllElementConfig_dropdown_interface {
    __typename: "FormElementDropdownConfigInterfaceType";
    icon: string;
    placeholder: string;
    showSearch: boolean;
    searchPlaceholder: string;
    emptySearchResultNotice: string;
    options: FAllElementConfig_dropdown_interface_options[];
    othersId: string;
    others: boolean;
    othersPlaceholder: string;
    shuffle: boolean;
}
export interface FAllElementConfig_dropdown_attributes {
    __typename: "FormElementConfigAttributesType";
    defaultValue: string;
    prefilParameter: string;
    prefilType: PrefilEnum;
    readonly: boolean;
}
export interface FAllElementConfig_dropdown_score_scoreConditions {
    __typename: "ElementScoreConditionType";
    compareWith: string;
    condition: EventComparisonEnum;
    id: string;
    operation: EventOperationEnum;
    scoreId: string;
    scoreOperation: ScoreOperationEnum;
    scoreValue: number;
}
export interface FAllElementConfig_dropdown_score {
    __typename: "FormElementConfigScoreType";
    scoreConditions: FAllElementConfig_dropdown_score_scoreConditions[];
}
export interface FAllElementConfig_dropdown_validation_filters {
    __typename: "FormElementConfigFiltersType";
    type: ValidationFilterTypeEnum | null;
    /**
     * Minimum number of choices.
     */
    minItems: number | null;
    /**
     * Maximum number of choices.
     */
    maxItems: number | null;
    /**
     * Minimum length for string type input.
     */
    minString: number | null;
    /**
     * Maximum length for string type input.
     */
    maxString: number | null;
    /**
     * Minimum value for number type input.
     */
    minNum: number | null;
    /**
     * Maximum value for number type input.
     */
    maxNum: number | null;
}
export interface FAllElementConfig_dropdown_validation {
    __typename: "FormElementDropdownConfigValidationType";
    filters: FAllElementConfig_dropdown_validation_filters;
    required: boolean;
    selectType: SelectTypeEnum;
}
export interface FAllElementConfig_dropdown {
    __typename: "FormElementDropdownConfigType";
    interface: FAllElementConfig_dropdown_interface | null;
    attributes: FAllElementConfig_dropdown_attributes;
    score: FAllElementConfig_dropdown_score;
    validation: FAllElementConfig_dropdown_validation | null;
}
export interface FAllElementConfig_heading_interface {
    __typename: "FormElementHeadingConfigInterfaceType";
    divider: boolean;
    icon: string;
    showTop: boolean;
    size: HeadingSizeEnum;
    tag: HeadingTagEnum;
}
export interface FAllElementConfig_heading {
    __typename: "FormElementHeadingConfigType";
    interface: FAllElementConfig_heading_interface | null;
}
export interface FAllElementConfig_radio_interface_options {
    __typename: "FormElementConfigMcqOptionType";
    answerDescription: string | null;
    id: string;
    label: string;
    num: number | null;
}
export interface FAllElementConfig_radio_interface {
    __typename: "FormElementRadioConfigInterfaceType";
    columns: OptionColumnEnum;
    icon: string;
    othersId: string;
    options: FAllElementConfig_radio_interface_options[];
    others: boolean;
    othersPlaceholder: string;
    shuffle: boolean;
}
export interface FAllElementConfig_radio_attributes {
    __typename: "FormElementConfigAttributesType";
    defaultValue: string;
    prefilParameter: string;
    prefilType: PrefilEnum;
    readonly: boolean;
}
export interface FAllElementConfig_radio_score_scoreConditions {
    __typename: "ElementScoreConditionType";
    compareWith: string;
    condition: EventComparisonEnum;
    id: string;
    operation: EventOperationEnum;
    scoreId: string;
    scoreOperation: ScoreOperationEnum;
    scoreValue: number;
}
export interface FAllElementConfig_radio_score {
    __typename: "FormElementConfigScoreType";
    scoreConditions: FAllElementConfig_radio_score_scoreConditions[];
}
export interface FAllElementConfig_radio_validation {
    __typename: "FormElementRadioConfigValidationType";
    required: boolean;
}
export interface FAllElementConfig_radio {
    __typename: "FormElementRadioConfigType";
    interface: FAllElementConfig_radio_interface | null;
    attributes: FAllElementConfig_radio_attributes;
    score: FAllElementConfig_radio_score;
    validation: FAllElementConfig_radio_validation | null;
}
export interface FAllElementConfig_text_interface {
    __typename: "FormElementTextConfigInterfaceType";
    icon: string;
    placeholder: string;
}
export interface FAllElementConfig_text_attributes {
    __typename: "FormElementConfigAttributesType";
    defaultValue: string;
    prefilParameter: string;
    prefilType: PrefilEnum;
    readonly: boolean;
}
export interface FAllElementConfig_text_score_scoreConditions {
    __typename: "ElementScoreConditionType";
    compareWith: string;
    condition: EventComparisonEnum;
    id: string;
    operation: EventOperationEnum;
    scoreId: string;
    scoreOperation: ScoreOperationEnum;
    scoreValue: number;
}
export interface FAllElementConfig_text_score {
    __typename: "FormElementConfigScoreType";
    scoreConditions: FAllElementConfig_text_score_scoreConditions[];
}
export interface FAllElementConfig_text_validation_filters {
    __typename: "FormElementConfigFiltersType";
    type: ValidationFilterTypeEnum | null;
    /**
     * Minimum number of choices.
     */
    minItems: number | null;
    /**
     * Maximum number of choices.
     */
    maxItems: number | null;
    /**
     * Minimum length for string type input.
     */
    minString: number | null;
    /**
     * Maximum length for string type input.
     */
    maxString: number | null;
    /**
     * Minimum value for number type input.
     */
    minNum: number | null;
    /**
     * Maximum value for number type input.
     */
    maxNum: number | null;
}
export interface FAllElementConfig_text_validation_masks_maskRegExps {
    __typename: "FormElementConfigMaskRegExpType";
    caseSensitive: boolean;
    id: string;
    pattern: string;
}
export interface FAllElementConfig_text_validation_masks {
    __typename: "FormElementConfigMasksType";
    alwaysShowMask: boolean;
    /**
     * Predefined mask.
     */
    maskPreset: string | null;
    /**
     * List of regular expressions in sequence.
     */
    maskRegExps: FAllElementConfig_text_validation_masks_maskRegExps[];
    /**
     * Mask from user input.
     */
    maskString: string | null;
    maskType: MaskTypeEnum | null;
    placeholder: string;
}
export interface FAllElementConfig_text_validation {
    __typename: "FormElementTextConfigValidationType";
    filters: FAllElementConfig_text_validation_filters;
    masks: FAllElementConfig_text_validation_masks;
    required: boolean;
}
export interface FAllElementConfig_text {
    __typename: "FormElementTextConfigType";
    interface: FAllElementConfig_text_interface | null;
    attributes: FAllElementConfig_text_attributes;
    score: FAllElementConfig_text_score;
    validation: FAllElementConfig_text_validation | null;
}
export interface FAllElementConfig_textarea_interface {
    __typename: "FormElementTextareaConfigInterfaceType";
    icon: string;
    placeholder: string;
}
export interface FAllElementConfig_textarea_attributes {
    __typename: "FormElementConfigAttributesType";
    defaultValue: string;
    prefilParameter: string;
    prefilType: PrefilEnum;
    readonly: boolean;
}
export interface FAllElementConfig_textarea_score_scoreConditions {
    __typename: "ElementScoreConditionType";
    compareWith: string;
    condition: EventComparisonEnum;
    id: string;
    operation: EventOperationEnum;
    scoreId: string;
    scoreOperation: ScoreOperationEnum;
    scoreValue: number;
}
export interface FAllElementConfig_textarea_score {
    __typename: "FormElementConfigScoreType";
    scoreConditions: FAllElementConfig_textarea_score_scoreConditions[];
}
export interface FAllElementConfig_textarea_validation_filters {
    __typename: "FormElementConfigFiltersType";
    type: ValidationFilterTypeEnum | null;
    /**
     * Minimum number of choices.
     */
    minItems: number | null;
    /**
     * Maximum number of choices.
     */
    maxItems: number | null;
    /**
     * Minimum length for string type input.
     */
    minString: number | null;
    /**
     * Maximum length for string type input.
     */
    maxString: number | null;
    /**
     * Minimum value for number type input.
     */
    minNum: number | null;
    /**
     * Maximum value for number type input.
     */
    maxNum: number | null;
}
export interface FAllElementConfig_textarea_validation {
    __typename: "FormElementTextareaConfigValidationType";
    required: boolean;
    filters: FAllElementConfig_textarea_validation_filters;
}
export interface FAllElementConfig_textarea {
    __typename: "FormElementTextareaConfigType";
    interface: FAllElementConfig_textarea_interface | null;
    attributes: FAllElementConfig_textarea_attributes;
    score: FAllElementConfig_textarea_score;
    validation: FAllElementConfig_textarea_validation | null;
}
export interface FAllElementConfig_toggle_interface {
    __typename: "FormElementToggleConfigInterfaceType";
    activeIcon: string;
    activeLabel: string;
    inactiveIcon: string;
    inactiveLabel: string;
}
export interface FAllElementConfig_toggle_score_scoreConditions {
    __typename: "ElementScoreConditionType";
    compareWith: string;
    condition: EventComparisonEnum;
    id: string;
    operation: EventOperationEnum;
    scoreId: string;
    scoreOperation: ScoreOperationEnum;
    scoreValue: number;
}
export interface FAllElementConfig_toggle_score {
    __typename: "FormElementConfigScoreType";
    scoreConditions: FAllElementConfig_toggle_score_scoreConditions[];
}
export interface FAllElementConfig_toggle_attributes {
    __typename: "FormElementConfigAttributesType";
    defaultValue: string;
    prefilParameter: string;
    prefilType: PrefilEnum;
    readonly: boolean;
}
export interface FAllElementConfig_toggle_validation {
    __typename: "FormElementToggleConfigValidationType";
    required: boolean;
}
export interface FAllElementConfig_toggle {
    __typename: "FormElementToggleConfigType";
    interface: FAllElementConfig_toggle_interface | null;
    score: FAllElementConfig_toggle_score;
    attributes: FAllElementConfig_toggle_attributes;
    validation: FAllElementConfig_toggle_validation | null;
}
export interface FAllElementConfig_slider_score_scoreConditions {
    __typename: "ElementScoreConditionType";
    compareWith: string;
    condition: EventComparisonEnum;
    id: string;
    operation: EventOperationEnum;
    scoreId: string;
    scoreOperation: ScoreOperationEnum;
    scoreValue: number;
}
export interface FAllElementConfig_slider_score {
    __typename: "FormElementConfigScoreType";
    scoreConditions: FAllElementConfig_slider_score_scoreConditions[];
}
export interface FAllElementConfig_slider_attributes {
    __typename: "FormElementConfigAttributesType";
    defaultValue: string;
    prefilParameter: string;
    prefilType: PrefilEnum;
    readonly: boolean;
}
export interface FAllElementConfig_slider_interface_customMarks {
    __typename: "FormElementConfigSliderMarkType";
    index: number;
    label: string | null;
    markId: string;
}
export interface FAllElementConfig_slider_interface {
    __typename: "FormElementSliderConfigInterfaceType";
    customMarks: FAllElementConfig_slider_interface_customMarks[];
    max: number;
    min: number;
    precision: number;
    showFreeInput: boolean;
    showMarks: boolean;
    step: number;
}
export interface FAllElementConfig_slider {
    __typename: "FormElementSliderConfigType";
    score: FAllElementConfig_slider_score;
    attributes: FAllElementConfig_slider_attributes;
    interface: FAllElementConfig_slider_interface | null;
}
export interface FAllElementConfig_range_score_scoreConditions {
    __typename: "ElementScoreConditionType";
    compareWith: string;
    condition: EventComparisonEnum;
    id: string;
    operation: EventOperationEnum;
    scoreId: string;
    scoreOperation: ScoreOperationEnum;
    scoreValue: number;
}
export interface FAllElementConfig_range_score {
    __typename: "FormElementConfigScoreType";
    scoreConditions: FAllElementConfig_range_score_scoreConditions[];
}
export interface FAllElementConfig_range_attributes {
    __typename: "FormElementConfigAttributesType";
    defaultValue: string;
    prefilParameter: string;
    prefilType: PrefilEnum;
    readonly: boolean;
}
export interface FAllElementConfig_range_interface_customMarks {
    __typename: "FormElementConfigSliderMarkType";
    index: number;
    label: string | null;
    markId: string;
}
export interface FAllElementConfig_range_interface {
    __typename: "FormElementRangeConfigInterfaceType";
    customMarks: FAllElementConfig_range_interface_customMarks[];
    max: number;
    min: number;
    precision: number;
    separator: string;
    showFreeInput: boolean;
    showMarks: boolean;
    step: number;
}
export interface FAllElementConfig_range {
    __typename: "FormElementRangeConfigType";
    score: FAllElementConfig_range_score;
    attributes: FAllElementConfig_range_attributes;
    interface: FAllElementConfig_range_interface | null;
}
export interface FAllElementConfig_mathcalc_interface {
    __typename: "FormElementMathcalcConfigInterfaceType";
    decimalSeparator: string;
    formula: string;
    precision: number;
    prefix: string;
    suffix: string;
    type: string;
    thousandsSeparator: string;
}
export interface FAllElementConfig_mathcalc {
    __typename: "FormElementMathcalcConfigType";
    interface: FAllElementConfig_mathcalc_interface | null;
}
export interface FAllElementConfig_rating_interface_customItems {
    __typename: "FormElementRatingItemType";
    icon: string;
    itemId: string;
}
export interface FAllElementConfig_rating_interface {
    __typename: "FormElementRatingConfigInterfaceType";
    compareWith: number;
    customItems: FAllElementConfig_rating_interface_customItems[];
    customRatingIcon: string;
    feedbackLabel: string;
    feedbackWhen: NumberComparisonEnum;
    ratingMax: number;
    showFeedback: boolean;
    type: string;
}
export interface FAllElementConfig_rating_validation {
    __typename: "FormElementRatingConfigValidationType";
    required: boolean;
}
export interface FAllElementConfig_rating_score_scoreConditions {
    __typename: "ElementScoreConditionType";
    compareWith: string;
    condition: EventComparisonEnum;
    id: string;
    operation: EventOperationEnum;
    scoreId: string;
    scoreOperation: ScoreOperationEnum;
    scoreValue: number;
}
export interface FAllElementConfig_rating_score {
    __typename: "FormElementConfigScoreType";
    scoreConditions: FAllElementConfig_rating_score_scoreConditions[];
}
export interface FAllElementConfig_rating_attributes {
    __typename: "FormElementConfigAttributesType";
    defaultValue: string;
    prefilParameter: string;
    prefilType: PrefilEnum;
    readonly: boolean;
}
export interface FAllElementConfig_rating {
    __typename: "FormElementRatingConfigType";
    interface: FAllElementConfig_rating_interface | null;
    validation: FAllElementConfig_rating_validation | null;
    score: FAllElementConfig_rating_score;
    attributes: FAllElementConfig_rating_attributes;
}
export interface FAllElementConfig_matrixchoice_validation {
    __typename: "FormElementMatrixchoiceConfigValidationType";
    required: boolean;
}
export interface FAllElementConfig_matrixchoice_attributes {
    __typename: "FormElementConfigAttributesType";
    defaultValue: string;
    prefilParameter: string;
    prefilType: PrefilEnum;
    readonly: boolean;
}
export interface FAllElementConfig_matrixchoice_score_scoreConditions {
    __typename: "ElementScoreConditionType";
    compareWith: string;
    condition: EventComparisonEnum;
    id: string;
    operation: EventOperationEnum;
    scoreId: string;
    scoreOperation: ScoreOperationEnum;
    scoreValue: number;
}
export interface FAllElementConfig_matrixchoice_score {
    __typename: "FormElementConfigScoreType";
    scoreConditions: FAllElementConfig_matrixchoice_score_scoreConditions[];
}
export interface FAllElementConfig_matrixchoice_interface_columns {
    __typename: "FormElementMatrixRowColumnType";
    itemId: string;
    label: string;
    num: number | null;
    width: string | null;
}
export interface FAllElementConfig_matrixchoice_interface_rows {
    __typename: "FormElementMatrixRowColumnType";
    itemId: string;
    label: string;
    num: number | null;
    width: string | null;
}
export interface FAllElementConfig_matrixchoice_interface {
    __typename: "FormElementMatrixchoiceConfigInterfaceType";
    columns: FAllElementConfig_matrixchoice_interface_columns[];
    rows: FAllElementConfig_matrixchoice_interface_rows[];
    icon: string;
    multiple: boolean;
    rowHeadingWidth: string;
    tableType: string;
}
export interface FAllElementConfig_matrixchoice {
    __typename: "FormElementMatrixchoiceConfigType";
    validation: FAllElementConfig_matrixchoice_validation | null;
    attributes: FAllElementConfig_matrixchoice_attributes;
    score: FAllElementConfig_matrixchoice_score;
    interface: FAllElementConfig_matrixchoice_interface | null;
}
export interface FAllElementConfig_sortable_attributes {
    __typename: "FormElementConfigAttributesType";
    defaultValue: string;
    prefilParameter: string;
    prefilType: PrefilEnum;
    readonly: boolean;
}
export interface FAllElementConfig_sortable_score_scoreConditions {
    __typename: "ElementScoreConditionType";
    compareWith: string;
    condition: EventComparisonEnum;
    id: string;
    operation: EventOperationEnum;
    scoreId: string;
    scoreOperation: ScoreOperationEnum;
    scoreValue: number;
}
export interface FAllElementConfig_sortable_score {
    __typename: "FormElementConfigScoreType";
    scoreConditions: FAllElementConfig_sortable_score_scoreConditions[];
}
export interface FAllElementConfig_sortable_interface_items {
    __typename: "FormElementSortableItemType";
    itemId: string;
    label: string;
}
export interface FAllElementConfig_sortable_interface {
    __typename: "FormElementSortableConfigInterfaceType";
    items: FAllElementConfig_sortable_interface_items[];
    lockVertically: boolean;
    shuffle: boolean;
}
export interface FAllElementConfig_sortable {
    __typename: "FormElementSortableConfigType";
    attributes: FAllElementConfig_sortable_attributes;
    score: FAllElementConfig_sortable_score;
    interface: FAllElementConfig_sortable_interface | null;
}
export interface FAllElementConfig_datetimeinput_validation {
    __typename: "FormElementDatetimeinputConfigValidationType";
    required: boolean;
    maxValue: string;
    minValue: string;
}
export interface FAllElementConfig_datetimeinput_attributes {
    __typename: "FormElementConfigAttributesType";
    defaultValue: string;
    prefilParameter: string;
    prefilType: PrefilEnum;
    readonly: boolean;
}
export interface FAllElementConfig_datetimeinput_score_scoreConditions {
    __typename: "ElementScoreConditionType";
    compareWith: string;
    condition: EventComparisonEnum;
    id: string;
    operation: EventOperationEnum;
    scoreId: string;
    scoreOperation: ScoreOperationEnum;
    scoreValue: number;
}
export interface FAllElementConfig_datetimeinput_score {
    __typename: "FormElementConfigScoreType";
    scoreConditions: FAllElementConfig_datetimeinput_score_scoreConditions[];
}
export interface FAllElementConfig_datetimeinput_interface {
    __typename: "FormElementDatetimeinputConfigInterfaceType";
    dateTimeSeparator: string;
    format: string;
    icon: string;
    showInputLabels: boolean;
    timeType: string;
    type: string;
    hideSeconds: boolean;
}
export interface FAllElementConfig_datetimeinput {
    __typename: "FormElementDatetimeinputConfigType";
    validation: FAllElementConfig_datetimeinput_validation | null;
    attributes: FAllElementConfig_datetimeinput_attributes;
    score: FAllElementConfig_datetimeinput_score;
    interface: FAllElementConfig_datetimeinput_interface | null;
}
export interface FAllElementConfig_matrixinput_validation {
    __typename: "FormElementMatrixinputConfigValidationType";
    required: boolean;
}
export interface FAllElementConfig_matrixinput_attributes {
    __typename: "FormElementConfigAttributesType";
    defaultValue: string;
    prefilParameter: string;
    prefilType: PrefilEnum;
    readonly: boolean;
}
export interface FAllElementConfig_matrixinput_score_scoreConditions {
    __typename: "ElementScoreConditionType";
    compareWith: string;
    condition: EventComparisonEnum;
    id: string;
    operation: EventOperationEnum;
    scoreId: string;
    scoreOperation: ScoreOperationEnum;
    scoreValue: number;
}
export interface FAllElementConfig_matrixinput_score {
    __typename: "FormElementConfigScoreType";
    scoreConditions: FAllElementConfig_matrixinput_score_scoreConditions[];
}
export interface FAllElementConfig_matrixinput_interface_columns {
    __typename: "FormElementMatrixRowColumnType";
    itemId: string;
    label: string;
    num: number | null;
    width: string | null;
}
export interface FAllElementConfig_matrixinput_interface_rows {
    __typename: "FormElementMatrixRowColumnType";
    itemId: string;
    label: string;
    num: number | null;
    width: string | null;
}
export interface FAllElementConfig_matrixinput_interface {
    __typename: "FormElementMatrixinputConfigInterfaceType";
    columns: FAllElementConfig_matrixinput_interface_columns[];
    rows: FAllElementConfig_matrixinput_interface_rows[];
    icon: string;
    multiline: boolean;
    rowHeadingWidth: string;
    tableType: string;
}
export interface FAllElementConfig_matrixinput {
    __typename: "FormElementMatrixinputConfigType";
    validation: FAllElementConfig_matrixinput_validation | null;
    attributes: FAllElementConfig_matrixinput_attributes;
    score: FAllElementConfig_matrixinput_score;
    interface: FAllElementConfig_matrixinput_interface | null;
}
export interface FAllElementConfig_singlecheckbox_interface {
    __typename: "FormElementSinglecheckboxConfigInterfaceType";
    icon: string;
}
export interface FAllElementConfig_singlecheckbox_score_scoreConditions {
    __typename: "ElementScoreConditionType";
    compareWith: string;
    condition: EventComparisonEnum;
    id: string;
    operation: EventOperationEnum;
    scoreId: string;
    scoreOperation: ScoreOperationEnum;
    scoreValue: number;
}
export interface FAllElementConfig_singlecheckbox_score {
    __typename: "FormElementConfigScoreType";
    scoreConditions: FAllElementConfig_singlecheckbox_score_scoreConditions[];
}
export interface FAllElementConfig_singlecheckbox_attributes {
    __typename: "FormElementConfigAttributesType";
    defaultValue: string;
    prefilParameter: string;
    prefilType: PrefilEnum;
    readonly: boolean;
}
export interface FAllElementConfig_singlecheckbox_validation {
    __typename: "FormElementSinglecheckboxConfigValidationType";
    required: boolean;
}
export interface FAllElementConfig_singlecheckbox {
    __typename: "FormElementSinglecheckboxConfigType";
    interface: FAllElementConfig_singlecheckbox_interface | null;
    score: FAllElementConfig_singlecheckbox_score;
    attributes: FAllElementConfig_singlecheckbox_attributes;
    validation: FAllElementConfig_singlecheckbox_validation | null;
}
export interface FAllElementConfig_address_validation {
    __typename: "FormElementAddressConfigValidationType";
    required: boolean;
}
export interface FAllElementConfig_address_attributes {
    __typename: "FormElementConfigAttributesType";
    defaultValue: string;
    prefilParameter: string;
    prefilType: PrefilEnum;
    readonly: boolean;
}
export interface FAllElementConfig_address_interface {
    __typename: "FormElementAddressConfigInterfaceType";
    cityPlaceholder: string;
    countryPlaceholder: string;
    disableIcons: boolean;
    fieldOne: boolean;
    fieldOnePlaceholder: string;
    fieldTwo: boolean;
    fieldTwoPlaceholder: string;
    restrictCountries: string[];
    showCity: boolean;
    showCountry: boolean;
    showState: boolean;
    showZip: boolean;
    statePlaceholder: string;
    zipPlaceholder: string;
}
export interface FAllElementConfig_address {
    __typename: "FormElementAddressConfigType";
    validation: FAllElementConfig_address_validation | null;
    attributes: FAllElementConfig_address_attributes;
    interface: FAllElementConfig_address_interface | null;
}
export interface FAllElementConfig {
    __typename: "FormElementConfigType";
    buttons: FAllElementConfig_buttons | null;
    checkbox: FAllElementConfig_checkbox | null;
    dropdown: FAllElementConfig_dropdown | null;
    heading: FAllElementConfig_heading | null;
    radio: FAllElementConfig_radio | null;
    text: FAllElementConfig_text | null;
    textarea: FAllElementConfig_textarea | null;
    toggle: FAllElementConfig_toggle | null;
    slider: FAllElementConfig_slider | null;
    range: FAllElementConfig_range | null;
    mathcalc: FAllElementConfig_mathcalc | null;
    rating: FAllElementConfig_rating | null;
    matrixchoice: FAllElementConfig_matrixchoice | null;
    sortable: FAllElementConfig_sortable | null;
    datetimeinput: FAllElementConfig_datetimeinput | null;
    matrixinput: FAllElementConfig_matrixinput | null;
    singlecheckbox: FAllElementConfig_singlecheckbox | null;
    address: FAllElementConfig_address | null;
}
