import { ReactNode } from 'react';
import { EventComparisonEnum } from "../../../../../../apollo/generated/types/graphql-global-types";
import { OptionsList } from '../McqConfigs/hooks';
export declare const numericComparisonList: EventComparisonEnum[];
export declare const multipleOptionsComparisonList: EventComparisonEnum[];
export declare const stringComparisonList: EventComparisonEnum[];
export declare const singleOptionsComparisonList: EventComparisonEnum[];
export declare type ScoreConfigProps = {
    /**
     * Available values to show.
     */
    availableValues?: OptionsList;
    /**
     * Compare type. If given custom, then it takes into account the compareWith.
     */
    compareType: 'all' | 'singleOption' | 'multipleOption' | 'numeric' | 'custom' | 'string';
    /**
     * If compare with is given, then it overrides all other props.
     */
    compareWith?: EventComparisonEnum[];
    /**
     * How to render the value comparison.
     */
    renderValue?: (value: string, setValue: (newValue: string) => void) => ReactNode;
};
export default function ScoreConfig<T = any>({ availableValues, compareType, compareWith, renderValue, }: ScoreConfigProps): JSX.Element;
