import { PrefilEnum, EventComparisonEnum, EventOperationEnum, ScoreOperationEnum, ValidationFilterTypeEnum, MaskTypeEnum } from "./../../../../../apollo/generated/types/graphql-global-types";
export interface FTextConfig_interface {
    __typename: "FormElementTextConfigInterfaceType";
    icon: string;
    placeholder: string;
}
export interface FTextConfig_attributes {
    __typename: "FormElementConfigAttributesType";
    defaultValue: string;
    prefilParameter: string;
    prefilType: PrefilEnum;
    readonly: boolean;
}
export interface FTextConfig_score_scoreConditions {
    __typename: "ElementScoreConditionType";
    compareWith: string;
    condition: EventComparisonEnum;
    id: string;
    operation: EventOperationEnum;
    scoreId: string;
    scoreOperation: ScoreOperationEnum;
    scoreValue: number;
}
export interface FTextConfig_score {
    __typename: "FormElementConfigScoreType";
    scoreConditions: FTextConfig_score_scoreConditions[];
}
export interface FTextConfig_validation_filters {
    __typename: "FormElementConfigFiltersType";
    type: ValidationFilterTypeEnum | null;
    /**
     * Minimum number of choices.
     */
    minItems: number | null;
    /**
     * Maximum number of choices.
     */
    maxItems: number | null;
    /**
     * Minimum length for string type input.
     */
    minString: number | null;
    /**
     * Maximum length for string type input.
     */
    maxString: number | null;
    /**
     * Minimum value for number type input.
     */
    minNum: number | null;
    /**
     * Maximum value for number type input.
     */
    maxNum: number | null;
}
export interface FTextConfig_validation_masks_maskRegExps {
    __typename: "FormElementConfigMaskRegExpType";
    caseSensitive: boolean;
    id: string;
    pattern: string;
}
export interface FTextConfig_validation_masks {
    __typename: "FormElementConfigMasksType";
    alwaysShowMask: boolean;
    /**
     * Predefined mask.
     */
    maskPreset: string | null;
    /**
     * List of regular expressions in sequence.
     */
    maskRegExps: FTextConfig_validation_masks_maskRegExps[];
    /**
     * Mask from user input.
     */
    maskString: string | null;
    maskType: MaskTypeEnum | null;
    placeholder: string;
}
export interface FTextConfig_validation {
    __typename: "FormElementTextConfigValidationType";
    filters: FTextConfig_validation_filters;
    masks: FTextConfig_validation_masks;
    required: boolean;
}
export interface FTextConfig {
    __typename: "FormElementTextConfigType";
    interface: FTextConfig_interface | null;
    attributes: FTextConfig_attributes;
    score: FTextConfig_score;
    validation: FTextConfig_validation | null;
}
