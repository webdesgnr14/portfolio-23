import React from 'react';
import { AdminElementCollectionItemType } from "../../../../../../collections/elements/types";
import { FormElementInput } from "../../../../../../../apollo/generated/types/graphql-global-types";
declare type elementDirectoryMetadataType = {
    name: string | null;
    image: string | null;
    description: string | null;
    icon: React.ReactNode | null;
};
declare type ElementGroupProps = {
    elements: {
        id: string;
        item: AdminElementCollectionItemType;
    }[];
    onSelect: (element: FormElementInput, sideEffect?: AdminElementCollectionItemType['performStoreSideEffect']) => void;
    title: string;
    setMetadata: React.Dispatch<React.SetStateAction<elementDirectoryMetadataType>>;
};
declare type NewElementDirectoryProps = {
    acceptedChildren?: string[];
    unacceptedChildren?: string[];
    onSelect: ElementGroupProps['onSelect'];
    title: string;
    onVisibleChange: (visible: boolean) => void;
};
declare type AddElementPrimaryButtonProps = Omit<NewElementDirectoryProps, 'title' | 'onVisibleChange' | 'onSelect'> & {
    children?: React.ReactElement;
    type?: 'dashed' | 'primary';
    label?: string;
    onSelect: (element: FormElementInput) => void;
};
export default function AddElementButton({ type, label, acceptedChildren, unacceptedChildren, onSelect, children, }: AddElementPrimaryButtonProps): JSX.Element;
export {};
