import React from 'react';
import { ConditionalEventInput, EventComparisonEnum, FormElementInput } from "../../../../../apollo/generated/types/graphql-global-types";
import { ArrayFieldProps } from "../../../../../app/admin/components/ArrayField";
import { possibleValueForAdminItemType } from "../../../../collections/elements/types";
import { Dictionary } from "../../../../../utils/dictionary";
export declare function getNewEvent(): ReturnType<ArrayFieldProps<ConditionalEventInput>['getNewItem']>;
export declare function getPossibleValues(selectedElementId: string | number | null | undefined, elements: Dictionary<FormElementInput>): possibleValueForAdminItemType[] | null;
export declare const comparisonOptionLabelMap: {
    [key in EventComparisonEnum]: string;
};
export declare const valueComparisonOptionsList: EventComparisonEnum[];
export declare const lengthComparisonOptionsList: EventComparisonEnum[];
export declare type EventUIProps = {
    events: ConditionalEventInput[];
    name: string;
    itemIndexPrefix?: React.ReactNode;
};
export default function EventUI({ events, name, itemIndexPrefix, }: EventUIProps): JSX.Element;
