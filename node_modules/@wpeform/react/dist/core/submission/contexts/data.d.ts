import React from 'react';
import { SubmissionWithForm, SubmissionWithForm_submission, SubmissionWithForm_submission_elements_scores } from "../graphql/gql-types/SubmissionWithForm";
import { Dictionary } from "../../../utils/dictionary";
import { submissionElementStateType } from "../../form/form-submission/state/types";
import { submissionFormDataElementType } from "../../form/form-submission/contexts/data";
export declare type submissionWithFormDataContextType = SubmissionWithForm_submission;
export declare const submissionWithFormDataContext: React.Context<SubmissionWithForm_submission>;
export declare function useNormalizedElementsConfigAndData(submissionWithFormData?: SubmissionWithForm, overrideConditional?: boolean): [elementsSubmissionDataContextType, elementsConfigContextType];
export declare function useSubmissionWithFormData(): SubmissionWithForm_submission;
export declare type elementsConfigContextType = Dictionary<submissionFormDataElementType>;
export declare const elementsConfigContext: React.Context<elementsConfigContextType>;
export declare function useElementsConfig(): elementsConfigContextType;
export declare type submissionElementWithScoreStateType = submissionElementStateType & {
    scores: SubmissionWithForm_submission_elements_scores[];
};
export declare type elementsSubmissionDataContextType = Dictionary<submissionElementWithScoreStateType>;
export declare const elementsSubmissionDataContext: React.Context<elementsSubmissionDataContextType>;
export declare function useElementsSubmissionData(): elementsSubmissionDataContextType;
export declare function SubmissionWithFormDataProvider(props: {
    submissionWithFormData: SubmissionWithForm;
    children: React.ReactNode;
}): JSX.Element;
