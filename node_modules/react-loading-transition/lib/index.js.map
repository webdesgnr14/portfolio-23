{"version":3,"file":"index.js","sources":["../src/core/loadContext.js","../src/core/loadTransition.js","../src/helper/is/index.js","../src/core/loadMotion.js","../src/index.js"],"sourcesContent":["import createContext from \"create-react-context\";\n\nexport const LoadContext = createContext();\n\nexport const {\n  Provider: LoadContextProvider,\n  Consumer: LoadContextConsumer\n} = LoadContext;\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { LoadContextProvider } from \"./loadContext\";\n\nexport default class LoadTransition extends React.Component {\n  constructor(props) {\n    super(props);\n    if (!props.loadNode) {\n      console.warn(\"loadNode attribute is empty!\");\n    }\n    this.state = {\n      LoadNode: props.loadNode,\n      isLoad: false\n    };\n    LoadTransition.doMotion = this.doMotion.bind(this);\n  }\n  doMotion = (loadState) => {\n    this.asyncAnimation(loadState, this.state.isLoad);\n  };\n\n  asyncAnimation = (nextStatus, prevStatus) => {\n    if (!nextStatus && prevStatus) {\n      setTimeout(() => {\n        this.setState({\n          isLoad: nextStatus\n        });\n      }, this.props.delay);\n    } else if (nextStatus && !prevStatus) {\n      this.setState({\n        isLoad: nextStatus\n      });\n    }\n  };\n\n  render() {\n    const providerObj = {\n      isload: this.state.isLoad,\n      appear: this.props.appear\n    };\n    const { LoadNode } = this.state;\n    return (\n      <main>\n        {LoadNode && (\n          <LoadNode {...providerObj} />\n        )}\n        <LoadContextProvider value={providerObj}>\n          {this.props.children}\n        </LoadContextProvider>\n      </main>\n    );\n  }\n}\n\nLoadTransition.defaultProps = {\n  LoadNode: null,\n  appear: false,\n  delay: 0\n};\n\nLoadTransition.propTypes = {\n  /**\n   * Provide an animated custom loading node\n   * which will return a page animation by default\n   * For example\n   */\n  loadNode: PropTypes.elementType,\n  /**\n   * Control whether to make an animation transition when entering the page for the first time\n   */\n  appear: PropTypes.bool,\n  /**\n   * Provides animation time control\n   */\n  delay: PropTypes.number\n};\n","\n/**\n * init the prototype type from toString\n * @param {any} val \n */\nconst getType = val => Object.prototype.toString.call(val)\n\n// 值类型判断 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\nexport const isUndefined = val => typeof val === 'undefined'\n\nexport const isNull = val => val === null\n\nexport const isFunction = val => typeof val === 'function'\n\nexport const isArray = val => Array.isArray ? Array.isArray(val) : getType(val) === '[object Array]'\n\nexport const isRegExp = val => val instanceof RegExp\n\nexport const isObject = val =>\n  typeof val === ('object' || 'function') && !isNull(val)\n\nexport const isBoolean = val => getType(val) === '[object Boolean]'\n\nexport const isString = val => getType(val) === '[object String]'\n\nexport const isExist = val => !(isUndefined(val) || isNull(val))\n\nexport const isNaN = val => val !== val\n\nexport const isNumber = val => typeof val === 'number' && !isNaN(val)\n// 值类型判断 -------------------------------------------------------------\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport { isString, isArray } from \"../helper/is\";\nimport { LoadContextConsumer, LoadContext } from \"./loadContext\";\nimport LoadTransition from \"./loadTransition\"\n\nexport default class LoadMotion extends React.Component {\n  constructor(props) {\n    super(props);\n    let initialFrom = null,\n      initialCome = null;\n    /**\n     * Modify the status of the component when it exits. In general projects\n     * I will use the delayed appearance of the component as the default transition condition\n     */\n    (props.from && !isString(props.from)) || !props.from\n      ? null\n      : props.from.split(\" \");\n    initialCome =\n      (props.come && !isString(props.come)) || !props.come\n        ? null\n        : props.come.split(\" \");\n    this.state = {\n      status: this.props.in,\n      from: isArray(initialFrom)\n        ? initialFrom.filter((item) => item)\n        : initialFrom,\n      come: isArray(initialCome)\n        ? initialCome.filter((item) => item)\n        : initialCome\n    };\n  }\n  componentDidUpdate() {\n    this._forceShow(this.props.timeout, this.props.in);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextProps.in !== this.state.status || nextState.status !== this.state.status) {\n      return true\n    }\n    if (nextProps.in && this.state.status) {\n      LoadTransition.doMotion(false)\n      return false\n    }\n    return false;\n  }\n\n  /**\n   * Control component switching and action effects\n   * @param {number} timeout\n   * @param {bool} nextState\n   * @param {node} nodeDOM\n   */\n  _forceShow = (timeout, nextState) => {\n    const { status, come, from } = this.state;\n    if (\n      (!come || !from) &&\n      ((nextState && !status) || (!nextState && status))\n    ) {\n      setTimeout(() => {\n        this.setState({ status: nextState });\n      }, timeout);\n    } else if (isArray(come) && isArray(from) && nextState && !status) {\n      this.setState({ status: nextState }, () => {\n        const maybedom = this.props.nodeRef\n          ? this.props.nodeRef\n          : ReactDOM.findDOMNode(this);\n        from.forEach((item) => maybedom.classList.add(item));\n        setTimeout(() => {\n          from.forEach((item) => maybedom.classList.remove(item));\n          come.forEach((item) => maybedom.classList.add(item));\n        }, timeout);\n      });\n    } else if (isArray(come) && isArray(from) && !nextState && status) {\n      setTimeout(() => {\n        this.setState({ status: nextState });\n      }, timeout);\n    }\n  };\n\n  render() {\n    if (!this.state.status) {\n      return null;\n    }\n    return (\n      <LoadContextConsumer>\n        {(value) =>\n          React.cloneElement(React.Children.only(this.props.children), {\n            ...value\n          })\n        }\n      </LoadContextConsumer>\n    );\n  }\n}\n\n\nLoadMotion.defaultProps = {\n  in: true,\n  from: null,\n  timeout: 0,\n  nodeRef: null,\n  come: null\n};\n\nLoadMotion.propTypes = {\n  /**\n   * Control whether to hide or switch display\n   * usually combined with react-router for display control\n   * The default is true\n   */\n  in: PropTypes.bool,\n  /**\n   * Used for the animation when the component jumps to control the display rotation of the two components\n   * When classNames does not exist, the default page jump program will be executed\n   *\n   * Default:\n   * ```css\n   * .loading-transition-exit{\n   *   opacity: 0;\n   *   position: absolute;\n   * }\n   * ```\n   */\n  from: PropTypes.string,\n  come: PropTypes.string,\n  /**\n   * Page jump delay, you can control the value to complete the animation loading\n   */\n  timeout: PropTypes.number,\n  /**\n   * Bind the default animation execution node, if there is no binding node, it is the default child node\n   */\n  nodeRef: PropTypes.node\n};\n","import LoadTransition from \"./core/loadTransition\";\nimport LoadMotion from \"./core/loadMotion\";\n\nconst domotion = state => LoadTransition.doMotion(state)\n\nexport { LoadTransition, LoadMotion, domotion };\n"],"names":["LoadContext","createContext","LoadContextProvider","Provider","LoadContextConsumer","Consumer","LoadTransition","React","Component","props","loadState","asyncAnimation","_this","state","isLoad","nextStatus","prevStatus","setTimeout","setState","delay","loadNode","console","warn","LoadNode","doMotion","bind","providerObj","isload","this","appear","value","children","defaultProps","propTypes","PropTypes","elementType","bool","number","getType","val","Object","prototype","toString","call","isArray","Array","isString","LoadMotion","timeout","nextState","status","come","from","maybedom","nodeRef","ReactDOM","findDOMNode","forEach","item","classList","add","remove","initialFrom","initialCome","split","filter","_forceShow","nextProps","cloneElement","Children","only","_this2","string","node"],"mappings":"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"}